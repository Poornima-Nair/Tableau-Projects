<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20214.22.0213.1102                               -->
<workbook original-version='18.1' source-build='2021.4.4 (20214.22.0213.1102)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Start Date' datatype='string' name='[Observation Date Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;4/3/2020&quot;'>
        <calculation class='tableau' formula='&quot;4/3/2020&quot;' />
        <members>
          <member value='&quot;1/1/2021&quot;' />
          <member value='&quot;1/2/2020&quot;' />
          <member value='&quot;1/3/2020&quot;' />
          <member value='&quot;1/4/2020&quot;' />
          <member value='&quot;1/5/2020&quot;' />
          <member value='&quot;1/6/2020&quot;' />
          <member value='&quot;1/7/2020&quot;' />
          <member value='&quot;1/8/2020&quot;' />
          <member value='&quot;1/9/2020&quot;' />
          <member value='&quot;1/10/2020&quot;' />
          <member value='&quot;1/11/2020&quot;' />
          <member value='&quot;1/12/2020&quot;' />
          <member value='&quot;2/1/2021&quot;' />
          <member value='&quot;2/2/2020&quot;' />
          <member value='&quot;2/3/2020&quot;' />
          <member value='&quot;2/4/2020&quot;' />
          <member value='&quot;2/5/2020&quot;' />
          <member value='&quot;2/6/2020&quot;' />
          <member value='&quot;2/7/2020&quot;' />
          <member value='&quot;2/8/2020&quot;' />
          <member value='&quot;2/9/2020&quot;' />
          <member value='&quot;2/10/2020&quot;' />
          <member value='&quot;2/11/2020&quot;' />
          <member value='&quot;2/12/2020&quot;' />
          <member value='&quot;3/1/2021&quot;' />
          <member value='&quot;3/2/2020&quot;' />
          <member value='&quot;3/3/2020&quot;' />
          <member value='&quot;3/4/2020&quot;' />
          <member value='&quot;3/5/2020&quot;' />
          <member value='&quot;3/6/2020&quot;' />
          <member value='&quot;3/7/2020&quot;' />
          <member value='&quot;3/8/2020&quot;' />
          <member value='&quot;3/9/2020&quot;' />
          <member value='&quot;3/10/2020&quot;' />
          <member value='&quot;3/11/2020&quot;' />
          <member value='&quot;3/12/2020&quot;' />
          <member value='&quot;4/1/2021&quot;' />
          <member value='&quot;4/2/2020&quot;' />
          <member value='&quot;4/3/2020&quot;' />
          <member value='&quot;4/4/2020&quot;' />
          <member value='&quot;4/5/2020&quot;' />
          <member value='&quot;4/6/2020&quot;' />
          <member value='&quot;4/7/2020&quot;' />
          <member value='&quot;4/8/2020&quot;' />
          <member value='&quot;4/9/2020&quot;' />
          <member value='&quot;4/10/2020&quot;' />
          <member value='&quot;4/11/2020&quot;' />
          <member value='&quot;4/12/2020&quot;' />
          <member value='&quot;5/1/2021&quot;' />
          <member value='&quot;5/2/2020&quot;' />
          <member value='&quot;5/3/2020&quot;' />
          <member value='&quot;5/4/2020&quot;' />
          <member value='&quot;5/5/2020&quot;' />
          <member value='&quot;5/6/2020&quot;' />
          <member value='&quot;5/7/2020&quot;' />
          <member value='&quot;5/8/2020&quot;' />
          <member value='&quot;5/9/2020&quot;' />
          <member value='&quot;5/10/2020&quot;' />
          <member value='&quot;5/11/2020&quot;' />
          <member value='&quot;5/12/2020&quot;' />
          <member value='&quot;6/1/2021&quot;' />
          <member value='&quot;6/2/2020&quot;' />
          <member value='&quot;6/3/2020&quot;' />
          <member value='&quot;6/4/2020&quot;' />
          <member value='&quot;6/5/2020&quot;' />
          <member value='&quot;6/6/2020&quot;' />
          <member value='&quot;6/7/2020&quot;' />
          <member value='&quot;6/8/2020&quot;' />
          <member value='&quot;6/9/2020&quot;' />
          <member value='&quot;6/10/2020&quot;' />
          <member value='&quot;6/11/2020&quot;' />
          <member value='&quot;6/12/2020&quot;' />
          <member value='&quot;7/1/2021&quot;' />
          <member value='&quot;7/2/2020&quot;' />
          <member value='&quot;7/3/2020&quot;' />
          <member value='&quot;7/4/2020&quot;' />
          <member value='&quot;7/5/2020&quot;' />
          <member value='&quot;7/6/2020&quot;' />
          <member value='&quot;7/7/2020&quot;' />
          <member value='&quot;7/8/2020&quot;' />
          <member value='&quot;7/9/2020&quot;' />
          <member value='&quot;7/10/2020&quot;' />
          <member value='&quot;7/11/2020&quot;' />
          <member value='&quot;7/12/2020&quot;' />
          <member value='&quot;8/1/2021&quot;' />
          <member value='&quot;8/2/2020&quot;' />
          <member value='&quot;8/3/2020&quot;' />
          <member value='&quot;8/4/2020&quot;' />
          <member value='&quot;8/5/2020&quot;' />
          <member value='&quot;8/6/2020&quot;' />
          <member value='&quot;8/7/2020&quot;' />
          <member value='&quot;8/8/2020&quot;' />
          <member value='&quot;8/9/2020&quot;' />
          <member value='&quot;8/10/2020&quot;' />
          <member value='&quot;8/11/2020&quot;' />
          <member value='&quot;8/12/2020&quot;' />
          <member value='&quot;9/1/2021&quot;' />
          <member value='&quot;9/2/2020&quot;' />
          <member value='&quot;9/3/2020&quot;' />
          <member value='&quot;9/4/2020&quot;' />
          <member value='&quot;9/5/2020&quot;' />
          <member value='&quot;9/6/2020&quot;' />
          <member value='&quot;9/7/2020&quot;' />
          <member value='&quot;9/8/2020&quot;' />
          <member value='&quot;9/9/2020&quot;' />
          <member value='&quot;9/10/2020&quot;' />
          <member value='&quot;9/11/2020&quot;' />
          <member value='&quot;9/12/2020&quot;' />
          <member value='&quot;01/13/2021&quot;' />
          <member value='&quot;01/14/2021&quot;' />
          <member value='&quot;01/15/2021&quot;' />
          <member value='&quot;01/16/2021&quot;' />
          <member value='&quot;01/17/2021&quot;' />
          <member value='&quot;01/18/2021&quot;' />
          <member value='&quot;01/19/2021&quot;' />
          <member value='&quot;01/22/2020&quot;' />
          <member value='&quot;01/23/2020&quot;' />
          <member value='&quot;01/24/2020&quot;' />
          <member value='&quot;01/25/2020&quot;' />
          <member value='&quot;01/26/2020&quot;' />
          <member value='&quot;01/27/2020&quot;' />
          <member value='&quot;01/28/2020&quot;' />
          <member value='&quot;01/29/2020&quot;' />
          <member value='&quot;01/30/2020&quot;' />
          <member value='&quot;01/31/2020&quot;' />
          <member value='&quot;02/13/2020&quot;' />
          <member value='&quot;02/14/2020&quot;' />
          <member value='&quot;02/15/2020&quot;' />
          <member value='&quot;02/16/2020&quot;' />
          <member value='&quot;02/17/2020&quot;' />
          <member value='&quot;02/18/2020&quot;' />
          <member value='&quot;02/19/2020&quot;' />
          <member value='&quot;02/20/2020&quot;' />
          <member value='&quot;02/21/2020&quot;' />
          <member value='&quot;02/22/2020&quot;' />
          <member value='&quot;02/23/2020&quot;' />
          <member value='&quot;02/24/2020&quot;' />
          <member value='&quot;02/25/2020&quot;' />
          <member value='&quot;02/26/2020&quot;' />
          <member value='&quot;02/27/2020&quot;' />
          <member value='&quot;02/28/2020&quot;' />
          <member value='&quot;02/29/2020&quot;' />
          <member value='&quot;03/13/2020&quot;' />
          <member value='&quot;03/14/2020&quot;' />
          <member value='&quot;03/15/2020&quot;' />
          <member value='&quot;03/16/2020&quot;' />
          <member value='&quot;03/17/2020&quot;' />
          <member value='&quot;03/18/2020&quot;' />
          <member value='&quot;03/19/2020&quot;' />
          <member value='&quot;03/20/2020&quot;' />
          <member value='&quot;03/21/2020&quot;' />
          <member value='&quot;03/22/2020&quot;' />
          <member value='&quot;03/23/2020&quot;' />
          <member value='&quot;03/24/2020&quot;' />
          <member value='&quot;03/25/2020&quot;' />
          <member value='&quot;03/26/2020&quot;' />
          <member value='&quot;03/27/2020&quot;' />
          <member value='&quot;03/28/2020&quot;' />
          <member value='&quot;03/29/2020&quot;' />
          <member value='&quot;03/30/2020&quot;' />
          <member value='&quot;03/31/2020&quot;' />
          <member value='&quot;04/13/2020&quot;' />
          <member value='&quot;04/14/2020&quot;' />
          <member value='&quot;04/15/2020&quot;' />
          <member value='&quot;04/16/2020&quot;' />
          <member value='&quot;04/17/2020&quot;' />
          <member value='&quot;04/18/2020&quot;' />
          <member value='&quot;04/19/2020&quot;' />
          <member value='&quot;04/20/2020&quot;' />
          <member value='&quot;04/21/2020&quot;' />
          <member value='&quot;04/22/2020&quot;' />
          <member value='&quot;04/23/2020&quot;' />
          <member value='&quot;04/24/2020&quot;' />
          <member value='&quot;04/25/2020&quot;' />
          <member value='&quot;04/26/2020&quot;' />
          <member value='&quot;04/27/2020&quot;' />
          <member value='&quot;04/28/2020&quot;' />
          <member value='&quot;04/29/2020&quot;' />
          <member value='&quot;04/30/2020&quot;' />
          <member value='&quot;05/13/2020&quot;' />
          <member value='&quot;05/14/2020&quot;' />
          <member value='&quot;05/15/2020&quot;' />
          <member value='&quot;05/16/2020&quot;' />
          <member value='&quot;05/17/2020&quot;' />
          <member value='&quot;05/18/2020&quot;' />
          <member value='&quot;05/19/2020&quot;' />
          <member value='&quot;05/20/2020&quot;' />
          <member value='&quot;05/21/2020&quot;' />
          <member value='&quot;05/22/2020&quot;' />
          <member value='&quot;05/23/2020&quot;' />
          <member value='&quot;05/24/2020&quot;' />
          <member value='&quot;05/25/2020&quot;' />
          <member value='&quot;05/26/2020&quot;' />
          <member value='&quot;05/27/2020&quot;' />
          <member value='&quot;05/28/2020&quot;' />
          <member value='&quot;05/29/2020&quot;' />
          <member value='&quot;05/30/2020&quot;' />
          <member value='&quot;05/31/2020&quot;' />
          <member value='&quot;06/13/2020&quot;' />
          <member value='&quot;06/14/2020&quot;' />
          <member value='&quot;06/15/2020&quot;' />
          <member value='&quot;06/16/2020&quot;' />
          <member value='&quot;06/17/2020&quot;' />
          <member value='&quot;06/18/2020&quot;' />
          <member value='&quot;06/19/2020&quot;' />
          <member value='&quot;06/20/2020&quot;' />
          <member value='&quot;06/21/2020&quot;' />
          <member value='&quot;06/22/2020&quot;' />
          <member value='&quot;06/23/2020&quot;' />
          <member value='&quot;06/24/2020&quot;' />
          <member value='&quot;06/25/2020&quot;' />
          <member value='&quot;06/26/2020&quot;' />
          <member value='&quot;06/27/2020&quot;' />
          <member value='&quot;06/28/2020&quot;' />
          <member value='&quot;06/29/2020&quot;' />
          <member value='&quot;06/30/2020&quot;' />
          <member value='&quot;07/13/2020&quot;' />
          <member value='&quot;07/14/2020&quot;' />
          <member value='&quot;07/15/2020&quot;' />
          <member value='&quot;07/16/2020&quot;' />
          <member value='&quot;07/17/2020&quot;' />
          <member value='&quot;07/18/2020&quot;' />
          <member value='&quot;07/19/2020&quot;' />
          <member value='&quot;07/20/2020&quot;' />
          <member value='&quot;07/21/2020&quot;' />
          <member value='&quot;07/22/2020&quot;' />
          <member value='&quot;07/23/2020&quot;' />
          <member value='&quot;07/24/2020&quot;' />
          <member value='&quot;07/25/2020&quot;' />
          <member value='&quot;07/26/2020&quot;' />
          <member value='&quot;07/27/2020&quot;' />
          <member value='&quot;07/28/2020&quot;' />
          <member value='&quot;07/29/2020&quot;' />
          <member value='&quot;07/30/2020&quot;' />
          <member value='&quot;07/31/2020&quot;' />
          <member value='&quot;08/13/2020&quot;' />
          <member value='&quot;08/14/2020&quot;' />
          <member value='&quot;08/15/2020&quot;' />
          <member value='&quot;08/16/2020&quot;' />
          <member value='&quot;08/17/2020&quot;' />
          <member value='&quot;08/18/2020&quot;' />
          <member value='&quot;08/19/2020&quot;' />
          <member value='&quot;08/20/2020&quot;' />
          <member value='&quot;08/21/2020&quot;' />
          <member value='&quot;08/22/2020&quot;' />
          <member value='&quot;08/23/2020&quot;' />
          <member value='&quot;08/24/2020&quot;' />
          <member value='&quot;08/25/2020&quot;' />
          <member value='&quot;08/26/2020&quot;' />
          <member value='&quot;08/27/2020&quot;' />
          <member value='&quot;08/28/2020&quot;' />
          <member value='&quot;08/29/2020&quot;' />
          <member value='&quot;08/30/2020&quot;' />
          <member value='&quot;08/31/2020&quot;' />
          <member value='&quot;09/13/2020&quot;' />
          <member value='&quot;09/14/2020&quot;' />
          <member value='&quot;09/15/2020&quot;' />
          <member value='&quot;09/16/2020&quot;' />
          <member value='&quot;09/17/2020&quot;' />
          <member value='&quot;09/18/2020&quot;' />
          <member value='&quot;09/19/2020&quot;' />
          <member value='&quot;09/20/2020&quot;' />
          <member value='&quot;09/21/2020&quot;' />
          <member value='&quot;09/22/2020&quot;' />
          <member value='&quot;09/23/2020&quot;' />
          <member value='&quot;09/24/2020&quot;' />
          <member value='&quot;09/25/2020&quot;' />
          <member value='&quot;09/26/2020&quot;' />
          <member value='&quot;09/27/2020&quot;' />
          <member value='&quot;09/28/2020&quot;' />
          <member value='&quot;09/29/2020&quot;' />
          <member value='&quot;09/30/2020&quot;' />
          <member value='&quot;10/1/2021&quot;' />
          <member value='&quot;10/2/2020&quot;' />
          <member value='&quot;10/3/2020&quot;' />
          <member value='&quot;10/4/2020&quot;' />
          <member value='&quot;10/5/2020&quot;' />
          <member value='&quot;10/6/2020&quot;' />
          <member value='&quot;10/7/2020&quot;' />
          <member value='&quot;10/8/2020&quot;' />
          <member value='&quot;10/9/2020&quot;' />
          <member value='&quot;10/10/2020&quot;' />
          <member value='&quot;10/11/2020&quot;' />
          <member value='&quot;10/12/2020&quot;' />
          <member value='&quot;10/13/2020&quot;' />
          <member value='&quot;10/14/2020&quot;' />
          <member value='&quot;10/15/2020&quot;' />
          <member value='&quot;10/16/2020&quot;' />
          <member value='&quot;10/17/2020&quot;' />
          <member value='&quot;10/18/2020&quot;' />
          <member value='&quot;10/19/2020&quot;' />
          <member value='&quot;10/20/2020&quot;' />
          <member value='&quot;10/21/2020&quot;' />
          <member value='&quot;10/22/2020&quot;' />
          <member value='&quot;10/23/2020&quot;' />
          <member value='&quot;10/24/2020&quot;' />
          <member value='&quot;10/25/2020&quot;' />
          <member value='&quot;10/26/2020&quot;' />
          <member value='&quot;10/27/2020&quot;' />
          <member value='&quot;10/28/2020&quot;' />
          <member value='&quot;10/29/2020&quot;' />
          <member value='&quot;10/30/2020&quot;' />
          <member value='&quot;10/31/2020&quot;' />
          <member value='&quot;11/1/2021&quot;' />
          <member value='&quot;11/2/2020&quot;' />
          <member value='&quot;11/3/2020&quot;' />
          <member value='&quot;11/4/2020&quot;' />
          <member value='&quot;11/5/2020&quot;' />
          <member value='&quot;11/6/2020&quot;' />
          <member value='&quot;11/7/2020&quot;' />
          <member value='&quot;11/8/2020&quot;' />
          <member value='&quot;11/9/2020&quot;' />
          <member value='&quot;11/10/2020&quot;' />
          <member value='&quot;11/11/2020&quot;' />
          <member value='&quot;11/12/2020&quot;' />
          <member value='&quot;11/13/2020&quot;' />
          <member value='&quot;11/14/2020&quot;' />
          <member value='&quot;11/15/2020&quot;' />
          <member value='&quot;11/16/2020&quot;' />
          <member value='&quot;11/17/2020&quot;' />
          <member value='&quot;11/18/2020&quot;' />
          <member value='&quot;11/19/2020&quot;' />
          <member value='&quot;11/20/2020&quot;' />
          <member value='&quot;11/21/2020&quot;' />
          <member value='&quot;11/22/2020&quot;' />
          <member value='&quot;11/23/2020&quot;' />
          <member value='&quot;11/24/2020&quot;' />
          <member value='&quot;11/25/2020&quot;' />
          <member value='&quot;11/26/2020&quot;' />
          <member value='&quot;11/27/2020&quot;' />
          <member value='&quot;11/28/2020&quot;' />
          <member value='&quot;11/29/2020&quot;' />
          <member value='&quot;11/30/2020&quot;' />
          <member value='&quot;12/1/2021&quot;' />
          <member value='&quot;12/2/2020&quot;' />
          <member value='&quot;12/3/2020&quot;' />
          <member value='&quot;12/4/2020&quot;' />
          <member value='&quot;12/5/2020&quot;' />
          <member value='&quot;12/6/2020&quot;' />
          <member value='&quot;12/7/2020&quot;' />
          <member value='&quot;12/8/2020&quot;' />
          <member value='&quot;12/9/2020&quot;' />
          <member value='&quot;12/10/2020&quot;' />
          <member value='&quot;12/11/2020&quot;' />
          <member value='&quot;12/12/2020&quot;' />
          <member value='&quot;12/13/2020&quot;' />
          <member value='&quot;12/14/2020&quot;' />
          <member value='&quot;12/15/2020&quot;' />
          <member value='&quot;12/16/2020&quot;' />
          <member value='&quot;12/17/2020&quot;' />
          <member value='&quot;12/18/2020&quot;' />
          <member value='&quot;12/19/2020&quot;' />
          <member value='&quot;12/20/2020&quot;' />
          <member value='&quot;12/21/2020&quot;' />
          <member value='&quot;12/22/2020&quot;' />
          <member value='&quot;12/23/2020&quot;' />
          <member value='&quot;12/24/2020&quot;' />
          <member value='&quot;12/25/2020&quot;' />
          <member value='&quot;12/26/2020&quot;' />
          <member value='&quot;12/27/2020&quot;' />
          <member value='&quot;12/28/2020&quot;' />
          <member value='&quot;12/29/2020&quot;' />
          <member value='&quot;12/30/2020&quot;' />
          <member value='&quot;12/31/2020&quot;' />
        </members>
      </column>
      <column caption='End Date' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;06/16/2020&quot;'>
        <calculation class='tableau' formula='&quot;06/16/2020&quot;' />
        <members>
          <member value='&quot;1/1/2021&quot;' />
          <member value='&quot;1/2/2020&quot;' />
          <member value='&quot;1/3/2020&quot;' />
          <member value='&quot;1/4/2020&quot;' />
          <member value='&quot;1/5/2020&quot;' />
          <member value='&quot;1/6/2020&quot;' />
          <member value='&quot;1/7/2020&quot;' />
          <member value='&quot;1/8/2020&quot;' />
          <member value='&quot;1/9/2020&quot;' />
          <member value='&quot;1/10/2020&quot;' />
          <member value='&quot;1/11/2020&quot;' />
          <member value='&quot;1/12/2020&quot;' />
          <member value='&quot;2/1/2021&quot;' />
          <member value='&quot;2/2/2020&quot;' />
          <member value='&quot;2/3/2020&quot;' />
          <member value='&quot;2/4/2020&quot;' />
          <member value='&quot;2/5/2020&quot;' />
          <member value='&quot;2/6/2020&quot;' />
          <member value='&quot;2/7/2020&quot;' />
          <member value='&quot;2/8/2020&quot;' />
          <member value='&quot;2/9/2020&quot;' />
          <member value='&quot;2/10/2020&quot;' />
          <member value='&quot;2/11/2020&quot;' />
          <member value='&quot;2/12/2020&quot;' />
          <member value='&quot;3/1/2021&quot;' />
          <member value='&quot;3/2/2020&quot;' />
          <member value='&quot;3/3/2020&quot;' />
          <member value='&quot;3/4/2020&quot;' />
          <member value='&quot;3/5/2020&quot;' />
          <member value='&quot;3/6/2020&quot;' />
          <member value='&quot;3/7/2020&quot;' />
          <member value='&quot;3/8/2020&quot;' />
          <member value='&quot;3/9/2020&quot;' />
          <member value='&quot;3/10/2020&quot;' />
          <member value='&quot;3/11/2020&quot;' />
          <member value='&quot;3/12/2020&quot;' />
          <member value='&quot;4/1/2021&quot;' />
          <member value='&quot;4/2/2020&quot;' />
          <member value='&quot;4/3/2020&quot;' />
          <member value='&quot;4/4/2020&quot;' />
          <member value='&quot;4/5/2020&quot;' />
          <member value='&quot;4/6/2020&quot;' />
          <member value='&quot;4/7/2020&quot;' />
          <member value='&quot;4/8/2020&quot;' />
          <member value='&quot;4/9/2020&quot;' />
          <member value='&quot;4/10/2020&quot;' />
          <member value='&quot;4/11/2020&quot;' />
          <member value='&quot;4/12/2020&quot;' />
          <member value='&quot;5/1/2021&quot;' />
          <member value='&quot;5/2/2020&quot;' />
          <member value='&quot;5/3/2020&quot;' />
          <member value='&quot;5/4/2020&quot;' />
          <member value='&quot;5/5/2020&quot;' />
          <member value='&quot;5/6/2020&quot;' />
          <member value='&quot;5/7/2020&quot;' />
          <member value='&quot;5/8/2020&quot;' />
          <member value='&quot;5/9/2020&quot;' />
          <member value='&quot;5/10/2020&quot;' />
          <member value='&quot;5/11/2020&quot;' />
          <member value='&quot;5/12/2020&quot;' />
          <member value='&quot;6/1/2021&quot;' />
          <member value='&quot;6/2/2020&quot;' />
          <member value='&quot;6/3/2020&quot;' />
          <member value='&quot;6/4/2020&quot;' />
          <member value='&quot;6/5/2020&quot;' />
          <member value='&quot;6/6/2020&quot;' />
          <member value='&quot;6/7/2020&quot;' />
          <member value='&quot;6/8/2020&quot;' />
          <member value='&quot;6/9/2020&quot;' />
          <member value='&quot;6/10/2020&quot;' />
          <member value='&quot;6/11/2020&quot;' />
          <member value='&quot;6/12/2020&quot;' />
          <member value='&quot;7/1/2021&quot;' />
          <member value='&quot;7/2/2020&quot;' />
          <member value='&quot;7/3/2020&quot;' />
          <member value='&quot;7/4/2020&quot;' />
          <member value='&quot;7/5/2020&quot;' />
          <member value='&quot;7/6/2020&quot;' />
          <member value='&quot;7/7/2020&quot;' />
          <member value='&quot;7/8/2020&quot;' />
          <member value='&quot;7/9/2020&quot;' />
          <member value='&quot;7/10/2020&quot;' />
          <member value='&quot;7/11/2020&quot;' />
          <member value='&quot;7/12/2020&quot;' />
          <member value='&quot;8/1/2021&quot;' />
          <member value='&quot;8/2/2020&quot;' />
          <member value='&quot;8/3/2020&quot;' />
          <member value='&quot;8/4/2020&quot;' />
          <member value='&quot;8/5/2020&quot;' />
          <member value='&quot;8/6/2020&quot;' />
          <member value='&quot;8/7/2020&quot;' />
          <member value='&quot;8/8/2020&quot;' />
          <member value='&quot;8/9/2020&quot;' />
          <member value='&quot;8/10/2020&quot;' />
          <member value='&quot;8/11/2020&quot;' />
          <member value='&quot;8/12/2020&quot;' />
          <member value='&quot;9/1/2021&quot;' />
          <member value='&quot;9/2/2020&quot;' />
          <member value='&quot;9/3/2020&quot;' />
          <member value='&quot;9/4/2020&quot;' />
          <member value='&quot;9/5/2020&quot;' />
          <member value='&quot;9/6/2020&quot;' />
          <member value='&quot;9/7/2020&quot;' />
          <member value='&quot;9/8/2020&quot;' />
          <member value='&quot;9/9/2020&quot;' />
          <member value='&quot;9/10/2020&quot;' />
          <member value='&quot;9/11/2020&quot;' />
          <member value='&quot;9/12/2020&quot;' />
          <member value='&quot;01/13/2021&quot;' />
          <member value='&quot;01/14/2021&quot;' />
          <member value='&quot;01/15/2021&quot;' />
          <member value='&quot;01/16/2021&quot;' />
          <member value='&quot;01/17/2021&quot;' />
          <member value='&quot;01/18/2021&quot;' />
          <member value='&quot;01/19/2021&quot;' />
          <member value='&quot;01/22/2020&quot;' />
          <member value='&quot;01/23/2020&quot;' />
          <member value='&quot;01/24/2020&quot;' />
          <member value='&quot;01/25/2020&quot;' />
          <member value='&quot;01/26/2020&quot;' />
          <member value='&quot;01/27/2020&quot;' />
          <member value='&quot;01/28/2020&quot;' />
          <member value='&quot;01/29/2020&quot;' />
          <member value='&quot;01/30/2020&quot;' />
          <member value='&quot;01/31/2020&quot;' />
          <member value='&quot;02/13/2020&quot;' />
          <member value='&quot;02/14/2020&quot;' />
          <member value='&quot;02/15/2020&quot;' />
          <member value='&quot;02/16/2020&quot;' />
          <member value='&quot;02/17/2020&quot;' />
          <member value='&quot;02/18/2020&quot;' />
          <member value='&quot;02/19/2020&quot;' />
          <member value='&quot;02/20/2020&quot;' />
          <member value='&quot;02/21/2020&quot;' />
          <member value='&quot;02/22/2020&quot;' />
          <member value='&quot;02/23/2020&quot;' />
          <member value='&quot;02/24/2020&quot;' />
          <member value='&quot;02/25/2020&quot;' />
          <member value='&quot;02/26/2020&quot;' />
          <member value='&quot;02/27/2020&quot;' />
          <member value='&quot;02/28/2020&quot;' />
          <member value='&quot;02/29/2020&quot;' />
          <member value='&quot;03/13/2020&quot;' />
          <member value='&quot;03/14/2020&quot;' />
          <member value='&quot;03/15/2020&quot;' />
          <member value='&quot;03/16/2020&quot;' />
          <member value='&quot;03/17/2020&quot;' />
          <member value='&quot;03/18/2020&quot;' />
          <member value='&quot;03/19/2020&quot;' />
          <member value='&quot;03/20/2020&quot;' />
          <member value='&quot;03/21/2020&quot;' />
          <member value='&quot;03/22/2020&quot;' />
          <member value='&quot;03/23/2020&quot;' />
          <member value='&quot;03/24/2020&quot;' />
          <member value='&quot;03/25/2020&quot;' />
          <member value='&quot;03/26/2020&quot;' />
          <member value='&quot;03/27/2020&quot;' />
          <member value='&quot;03/28/2020&quot;' />
          <member value='&quot;03/29/2020&quot;' />
          <member value='&quot;03/30/2020&quot;' />
          <member value='&quot;03/31/2020&quot;' />
          <member value='&quot;04/13/2020&quot;' />
          <member value='&quot;04/14/2020&quot;' />
          <member value='&quot;04/15/2020&quot;' />
          <member value='&quot;04/16/2020&quot;' />
          <member value='&quot;04/17/2020&quot;' />
          <member value='&quot;04/18/2020&quot;' />
          <member value='&quot;04/19/2020&quot;' />
          <member value='&quot;04/20/2020&quot;' />
          <member value='&quot;04/21/2020&quot;' />
          <member value='&quot;04/22/2020&quot;' />
          <member value='&quot;04/23/2020&quot;' />
          <member value='&quot;04/24/2020&quot;' />
          <member value='&quot;04/25/2020&quot;' />
          <member value='&quot;04/26/2020&quot;' />
          <member value='&quot;04/27/2020&quot;' />
          <member value='&quot;04/28/2020&quot;' />
          <member value='&quot;04/29/2020&quot;' />
          <member value='&quot;04/30/2020&quot;' />
          <member value='&quot;05/13/2020&quot;' />
          <member value='&quot;05/14/2020&quot;' />
          <member value='&quot;05/15/2020&quot;' />
          <member value='&quot;05/16/2020&quot;' />
          <member value='&quot;05/17/2020&quot;' />
          <member value='&quot;05/18/2020&quot;' />
          <member value='&quot;05/19/2020&quot;' />
          <member value='&quot;05/20/2020&quot;' />
          <member value='&quot;05/21/2020&quot;' />
          <member value='&quot;05/22/2020&quot;' />
          <member value='&quot;05/23/2020&quot;' />
          <member value='&quot;05/24/2020&quot;' />
          <member value='&quot;05/25/2020&quot;' />
          <member value='&quot;05/26/2020&quot;' />
          <member value='&quot;05/27/2020&quot;' />
          <member value='&quot;05/28/2020&quot;' />
          <member value='&quot;05/29/2020&quot;' />
          <member value='&quot;05/30/2020&quot;' />
          <member value='&quot;05/31/2020&quot;' />
          <member value='&quot;06/13/2020&quot;' />
          <member value='&quot;06/14/2020&quot;' />
          <member value='&quot;06/15/2020&quot;' />
          <member value='&quot;06/16/2020&quot;' />
          <member value='&quot;06/17/2020&quot;' />
          <member value='&quot;06/18/2020&quot;' />
          <member value='&quot;06/19/2020&quot;' />
          <member value='&quot;06/20/2020&quot;' />
          <member value='&quot;06/21/2020&quot;' />
          <member value='&quot;06/22/2020&quot;' />
          <member value='&quot;06/23/2020&quot;' />
          <member value='&quot;06/24/2020&quot;' />
          <member value='&quot;06/25/2020&quot;' />
          <member value='&quot;06/26/2020&quot;' />
          <member value='&quot;06/27/2020&quot;' />
          <member value='&quot;06/28/2020&quot;' />
          <member value='&quot;06/29/2020&quot;' />
          <member value='&quot;06/30/2020&quot;' />
          <member value='&quot;07/13/2020&quot;' />
          <member value='&quot;07/14/2020&quot;' />
          <member value='&quot;07/15/2020&quot;' />
          <member value='&quot;07/16/2020&quot;' />
          <member value='&quot;07/17/2020&quot;' />
          <member value='&quot;07/18/2020&quot;' />
          <member value='&quot;07/19/2020&quot;' />
          <member value='&quot;07/20/2020&quot;' />
          <member value='&quot;07/21/2020&quot;' />
          <member value='&quot;07/22/2020&quot;' />
          <member value='&quot;07/23/2020&quot;' />
          <member value='&quot;07/24/2020&quot;' />
          <member value='&quot;07/25/2020&quot;' />
          <member value='&quot;07/26/2020&quot;' />
          <member value='&quot;07/27/2020&quot;' />
          <member value='&quot;07/28/2020&quot;' />
          <member value='&quot;07/29/2020&quot;' />
          <member value='&quot;07/30/2020&quot;' />
          <member value='&quot;07/31/2020&quot;' />
          <member value='&quot;08/13/2020&quot;' />
          <member value='&quot;08/14/2020&quot;' />
          <member value='&quot;08/15/2020&quot;' />
          <member value='&quot;08/16/2020&quot;' />
          <member value='&quot;08/17/2020&quot;' />
          <member value='&quot;08/18/2020&quot;' />
          <member value='&quot;08/19/2020&quot;' />
          <member value='&quot;08/20/2020&quot;' />
          <member value='&quot;08/21/2020&quot;' />
          <member value='&quot;08/22/2020&quot;' />
          <member value='&quot;08/23/2020&quot;' />
          <member value='&quot;08/24/2020&quot;' />
          <member value='&quot;08/25/2020&quot;' />
          <member value='&quot;08/26/2020&quot;' />
          <member value='&quot;08/27/2020&quot;' />
          <member value='&quot;08/28/2020&quot;' />
          <member value='&quot;08/29/2020&quot;' />
          <member value='&quot;08/30/2020&quot;' />
          <member value='&quot;08/31/2020&quot;' />
          <member value='&quot;09/13/2020&quot;' />
          <member value='&quot;09/14/2020&quot;' />
          <member value='&quot;09/15/2020&quot;' />
          <member value='&quot;09/16/2020&quot;' />
          <member value='&quot;09/17/2020&quot;' />
          <member value='&quot;09/18/2020&quot;' />
          <member value='&quot;09/19/2020&quot;' />
          <member value='&quot;09/20/2020&quot;' />
          <member value='&quot;09/21/2020&quot;' />
          <member value='&quot;09/22/2020&quot;' />
          <member value='&quot;09/23/2020&quot;' />
          <member value='&quot;09/24/2020&quot;' />
          <member value='&quot;09/25/2020&quot;' />
          <member value='&quot;09/26/2020&quot;' />
          <member value='&quot;09/27/2020&quot;' />
          <member value='&quot;09/28/2020&quot;' />
          <member value='&quot;09/29/2020&quot;' />
          <member value='&quot;09/30/2020&quot;' />
          <member value='&quot;10/1/2021&quot;' />
          <member value='&quot;10/2/2020&quot;' />
          <member value='&quot;10/3/2020&quot;' />
          <member value='&quot;10/4/2020&quot;' />
          <member value='&quot;10/5/2020&quot;' />
          <member value='&quot;10/6/2020&quot;' />
          <member value='&quot;10/7/2020&quot;' />
          <member value='&quot;10/8/2020&quot;' />
          <member value='&quot;10/9/2020&quot;' />
          <member value='&quot;10/10/2020&quot;' />
          <member value='&quot;10/11/2020&quot;' />
          <member value='&quot;10/12/2020&quot;' />
          <member value='&quot;10/13/2020&quot;' />
          <member value='&quot;10/14/2020&quot;' />
          <member value='&quot;10/15/2020&quot;' />
          <member value='&quot;10/16/2020&quot;' />
          <member value='&quot;10/17/2020&quot;' />
          <member value='&quot;10/18/2020&quot;' />
          <member value='&quot;10/19/2020&quot;' />
          <member value='&quot;10/20/2020&quot;' />
          <member value='&quot;10/21/2020&quot;' />
          <member value='&quot;10/22/2020&quot;' />
          <member value='&quot;10/23/2020&quot;' />
          <member value='&quot;10/24/2020&quot;' />
          <member value='&quot;10/25/2020&quot;' />
          <member value='&quot;10/26/2020&quot;' />
          <member value='&quot;10/27/2020&quot;' />
          <member value='&quot;10/28/2020&quot;' />
          <member value='&quot;10/29/2020&quot;' />
          <member value='&quot;10/30/2020&quot;' />
          <member value='&quot;10/31/2020&quot;' />
          <member value='&quot;11/1/2021&quot;' />
          <member value='&quot;11/2/2020&quot;' />
          <member value='&quot;11/3/2020&quot;' />
          <member value='&quot;11/4/2020&quot;' />
          <member value='&quot;11/5/2020&quot;' />
          <member value='&quot;11/6/2020&quot;' />
          <member value='&quot;11/7/2020&quot;' />
          <member value='&quot;11/8/2020&quot;' />
          <member value='&quot;11/9/2020&quot;' />
          <member value='&quot;11/10/2020&quot;' />
          <member value='&quot;11/11/2020&quot;' />
          <member value='&quot;11/12/2020&quot;' />
          <member value='&quot;11/13/2020&quot;' />
          <member value='&quot;11/14/2020&quot;' />
          <member value='&quot;11/15/2020&quot;' />
          <member value='&quot;11/16/2020&quot;' />
          <member value='&quot;11/17/2020&quot;' />
          <member value='&quot;11/18/2020&quot;' />
          <member value='&quot;11/19/2020&quot;' />
          <member value='&quot;11/20/2020&quot;' />
          <member value='&quot;11/21/2020&quot;' />
          <member value='&quot;11/22/2020&quot;' />
          <member value='&quot;11/23/2020&quot;' />
          <member value='&quot;11/24/2020&quot;' />
          <member value='&quot;11/25/2020&quot;' />
          <member value='&quot;11/26/2020&quot;' />
          <member value='&quot;11/27/2020&quot;' />
          <member value='&quot;11/28/2020&quot;' />
          <member value='&quot;11/29/2020&quot;' />
          <member value='&quot;11/30/2020&quot;' />
          <member value='&quot;12/1/2021&quot;' />
          <member value='&quot;12/2/2020&quot;' />
          <member value='&quot;12/3/2020&quot;' />
          <member value='&quot;12/4/2020&quot;' />
          <member value='&quot;12/5/2020&quot;' />
          <member value='&quot;12/6/2020&quot;' />
          <member value='&quot;12/7/2020&quot;' />
          <member value='&quot;12/8/2020&quot;' />
          <member value='&quot;12/9/2020&quot;' />
          <member value='&quot;12/10/2020&quot;' />
          <member value='&quot;12/11/2020&quot;' />
          <member value='&quot;12/12/2020&quot;' />
          <member value='&quot;12/13/2020&quot;' />
          <member value='&quot;12/14/2020&quot;' />
          <member value='&quot;12/15/2020&quot;' />
          <member value='&quot;12/16/2020&quot;' />
          <member value='&quot;12/17/2020&quot;' />
          <member value='&quot;12/18/2020&quot;' />
          <member value='&quot;12/19/2020&quot;' />
          <member value='&quot;12/20/2020&quot;' />
          <member value='&quot;12/21/2020&quot;' />
          <member value='&quot;12/22/2020&quot;' />
          <member value='&quot;12/23/2020&quot;' />
          <member value='&quot;12/24/2020&quot;' />
          <member value='&quot;12/25/2020&quot;' />
          <member value='&quot;12/26/2020&quot;' />
          <member value='&quot;12/27/2020&quot;' />
          <member value='&quot;12/28/2020&quot;' />
          <member value='&quot;12/29/2020&quot;' />
          <member value='&quot;12/30/2020&quot;' />
          <member value='&quot;12/31/2020&quot;' />
        </members>
      </column>
      <column alias='Top 15' caption='Top N' datatype='integer' name='[Parameter 2]' param-domain-type='list' role='measure' type='quantitative' value='15'>
        <calculation class='tableau' formula='15' />
        <aliases>
          <alias key='10' value='Top 10' />
          <alias key='15' value='Top 15' />
          <alias key='20' value='Top 20' />
        </aliases>
        <members>
          <member alias='Top 20' value='20' />
          <member alias='Top 15' value='15' />
          <member alias='Top 10' value='10' />
        </members>
      </column>
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Observation Date Parameter]' palette='orange_10_0' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;08/31/2020&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;1/1/2021&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;1/12/2020&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;12/31/2020&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;4/12/2020&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;5/1/2021&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;7/10/2020&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;3/2/2020&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;2/11/2020&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;5/4/2020&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;3/12/2020&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;03/18/2020&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;2/3/2020&quot;</bucket>
            </map>
            <map to='#ed6f20'>
              <bucket>&quot;03/21/2020&quot;</bucket>
            </map>
            <map to='#ed6f20'>
              <bucket>&quot;05/14/2020&quot;</bucket>
            </map>
            <map to='#ed6f20'>
              <bucket>&quot;05/21/2020&quot;</bucket>
            </map>
            <map to='#ed6f20'>
              <bucket>&quot;3/10/2020&quot;</bucket>
            </map>
            <map to='#ed6f20'>
              <bucket>&quot;3/6/2020&quot;</bucket>
            </map>
            <map to='#ed6f20'>
              <bucket>&quot;4/3/2020&quot;</bucket>
            </map>
            <map to='#ed6f20'>
              <bucket>&quot;5/10/2020&quot;</bucket>
            </map>
            <map to='#ed6f20'>
              <bucket>&quot;5/12/2020&quot;</bucket>
            </map>
            <map to='#ed6f20'>
              <bucket>&quot;6/7/2020&quot;</bucket>
            </map>
            <map to='#ed6f20'>
              <bucket>&quot;7/2/2020&quot;</bucket>
            </map>
            <map to='#ed6f20'>
              <bucket>&quot;7/6/2020&quot;</bucket>
            </map>
            <map to='#ed6f20'>
              <bucket>&quot;8/12/2020&quot;</bucket>
            </map>
            <map to='#ed6f20'>
              <bucket>&quot;9/12/2020&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;3/9/2020&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;2/1/2021&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;4/2/2020&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
    </datasource>
    <datasource caption='covid_19_data (covid_19_data)' inline='true' name='federated.1tusbzf02u76j41dptf3q0f3ju1i' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='covid_19_data' name='excel-direct.138egwn1c95g5617anmfg04qgd0w'>
            <connection class='excel-direct' cleaning='yes' compat='no' dataRefreshTime='' filename='C:/Users/user/Downloads/covid_19_data.xlsx' interpretationMode='1' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.138egwn1c95g5617anmfg04qgd0w' name='covid_19_data' table='[covid_19_data$]' type='table'>
          <columns gridOrigin='A1:H10001:no:A1:H2147483647:1' header='yes' lost='0' outcome='1' processed='45615'>
            <column datatype='integer' name='SNo' ordinal='0' />
            <column datatype='string' name='ObservationDate' ordinal='1' />
            <column datatype='string' name='Province/State' ordinal='2' />
            <column datatype='string' name='Country/Region' ordinal='3' />
            <column datatype='datetime' date-parse-format='MM/dd/yyyy HH:mm|#|#|yyyy-MM-dd&apos;T&apos;HH:mm:ss' name='Last Update' ordinal='4' />
            <column datatype='integer' name='Confirmed' ordinal='5' />
            <column datatype='integer' name='Deaths' ordinal='6' />
            <column datatype='integer' name='Recovered' ordinal='7' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.138egwn1c95g5617anmfg04qgd0w' name='covid_19_data' table='[covid_19_data$]' type='table'>
          <columns gridOrigin='A1:H10001:no:A1:H2147483647:1' header='yes' lost='0' outcome='1' processed='45615'>
            <column datatype='integer' name='SNo' ordinal='0' />
            <column datatype='string' name='ObservationDate' ordinal='1' />
            <column datatype='string' name='Province/State' ordinal='2' />
            <column datatype='string' name='Country/Region' ordinal='3' />
            <column datatype='datetime' date-parse-format='MM/dd/yyyy HH:mm|#|#|yyyy-MM-dd&apos;T&apos;HH:mm:ss' name='Last Update' ordinal='4' />
            <column datatype='integer' name='Confirmed' ordinal='5' />
            <column datatype='integer' name='Deaths' ordinal='6' />
            <column datatype='integer' name='Recovered' ordinal='7' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[covid_19_data]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>5</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:H10001:no:A1:H2147483647:1&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>45615</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SNo</remote-name>
            <remote-type>20</remote-type>
            <local-name>[SNo]</local-name>
            <parent-name>[covid_19_data]</parent-name>
            <remote-alias>SNo</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid!19!data_3A81BA20AC9B413295C60C5D605AE870]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ObservationDate</remote-name>
            <remote-type>130</remote-type>
            <local-name>[ObservationDate]</local-name>
            <parent-name>[covid_19_data]</parent-name>
            <remote-alias>ObservationDate</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid!19!data_3A81BA20AC9B413295C60C5D605AE870]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Province/State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Province/State]</local-name>
            <parent-name>[covid_19_data]</parent-name>
            <remote-alias>Province/State</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid!19!data_3A81BA20AC9B413295C60C5D605AE870]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country/Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country/Region]</local-name>
            <parent-name>[covid_19_data]</parent-name>
            <remote-alias>Country/Region</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid!19!data_3A81BA20AC9B413295C60C5D605AE870]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Last Update</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Last Update]</local-name>
            <parent-name>[covid_19_data]</parent-name>
            <remote-alias>Last Update</remote-alias>
            <ordinal>4</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid!19!data_3A81BA20AC9B413295C60C5D605AE870]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Confirmed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Confirmed]</local-name>
            <parent-name>[covid_19_data]</parent-name>
            <remote-alias>Confirmed</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid!19!data_3A81BA20AC9B413295C60C5D605AE870]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Deaths]</local-name>
            <parent-name>[covid_19_data]</parent-name>
            <remote-alias>Deaths</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid!19!data_3A81BA20AC9B413295C60C5D605AE870]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Recovered</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Recovered]</local-name>
            <parent-name>[covid_19_data]</parent-name>
            <remote-alias>Recovered</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid!19!data_3A81BA20AC9B413295C60C5D605AE870]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Death Rate' datatype='real' name='[Calculation_176203353493499910]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Deaths]/([Confirmed])' />
      </column>
      <column caption='Recovery Rate' datatype='real' name='[Calculation_176203353501544455]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Recovered]/[Confirmed]' />
      </column>
      <column caption='Date Range' datatype='boolean' name='[Calculation_273030745838575616]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[ObservationDate]&lt;=[Parameters].[Observation Date Parameter]AND [Parameters].[Parameter 1]&lt;=[ObservationDate]' />
      </column>
      <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Observation Date' datatype='string' name='[ObservationDate]' role='dimension' type='nominal' />
      <column datatype='string' name='[Province/State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='S No' datatype='integer' name='[SNo]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='covid_19_data' datatype='table' name='[__tableau_internal_object_id__].[covid!19!data_3A81BA20AC9B413295C60C5D605AE870]' role='measure' type='quantitative' />
      <group caption='Action (Country/Region,Province/State)' hidden='true' name='[Action (Country/Region,Province/State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country/Region]' />
          <groupfilter function='level-members' level='[Province/State]' />
        </groupfilter>
      </group>
      <group caption='Action (Province/State)' hidden='true' name='[Action (Province/State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Province/State]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Country/Region, Province/State'>
          <field>[Country/Region]</field>
          <field>[Province/State]</field>
        </drill-path>
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Start Date' datatype='string' name='[Observation Date Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;4/3/2020&quot;'>
          <calculation class='tableau' formula='&quot;4/3/2020&quot;' />
        </column>
        <column caption='End Date' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;06/16/2020&quot;'>
          <calculation class='tableau' formula='&quot;06/16/2020&quot;' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='covid_19_data' id='covid!19!data_3A81BA20AC9B413295C60C5D605AE870'>
            <properties context=''>
              <relation connection='excel-direct.138egwn1c95g5617anmfg04qgd0w' name='covid_19_data' table='[covid_19_data$]' type='table'>
                <columns gridOrigin='A1:H10001:no:A1:H2147483647:1' header='yes' lost='0' outcome='1' processed='45615'>
                  <column datatype='integer' name='SNo' ordinal='0' />
                  <column datatype='string' name='ObservationDate' ordinal='1' />
                  <column datatype='string' name='Province/State' ordinal='2' />
                  <column datatype='string' name='Country/Region' ordinal='3' />
                  <column datatype='datetime' date-parse-format='MM/dd/yyyy HH:mm|#|#|yyyy-MM-dd&apos;T&apos;HH:mm:ss' name='Last Update' ordinal='4' />
                  <column datatype='integer' name='Confirmed' ordinal='5' />
                  <column datatype='integer' name='Deaths' ordinal='6' />
                  <column datatype='integer' name='Recovered' ordinal='7' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1_AA58AE7D44D347BFBEBAC4BC683C38A8]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Confirmed Cases By Country' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Confirmed Cases By Country'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_data (covid_19_data)' name='federated.1tusbzf02u76j41dptf3q0f3ju1i' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Start Date' datatype='string' name='[Observation Date Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;4/3/2020&quot;'>
              <calculation class='tableau' formula='&quot;4/3/2020&quot;' />
            </column>
            <column caption='End Date' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;06/16/2020&quot;'>
              <calculation class='tableau' formula='&quot;06/16/2020&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1tusbzf02u76j41dptf3q0f3ju1i'>
            <column caption='Date Range' datatype='boolean' name='[Calculation_273030745838575616]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[ObservationDate]&lt;=[Parameters].[Observation Date Parameter]AND [Parameters].[Parameter 1]&lt;=[ObservationDate]' />
            </column>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Observation Date' datatype='string' name='[ObservationDate]' role='dimension' type='nominal' />
            <column datatype='string' name='[Province/State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_273030745838575616]' derivation='None' name='[none:Calculation_273030745838575616:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Province/State]' derivation='None' name='[none:Province/State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1tusbzf02u76j41dptf3q0f3ju1i].[none:Calculation_273030745838575616:nk]'>
            <groupfilter function='member' level='[none:Calculation_273030745838575616:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1tusbzf02u76j41dptf3q0f3ju1i].[none:Calculation_273030745838575616:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1tusbzf02u76j41dptf3q0f3ju1i].[Longitude (generated)]' field-type='quantitative' max='26249629.443928026' min='-18049246.995198693' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1tusbzf02u76j41dptf3q0f3ju1i].[Latitude (generated)]' field-type='quantitative' max='18692098.589451045' min='-18043554.334590465' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1tusbzf02u76j41dptf3q0f3ju1i].[sum:Confirmed:qk]' palette='orange_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1tusbzf02u76j41dptf3q0f3ju1i].[sum:Confirmed:qk]' />
              <lod column='[federated.1tusbzf02u76j41dptf3q0f3ju1i].[none:Country/Region:nk]' />
              <lod column='[federated.1tusbzf02u76j41dptf3q0f3ju1i].[none:Province/State:nk]' />
              <geometry column='[federated.1tusbzf02u76j41dptf3q0f3ju1i].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1tusbzf02u76j41dptf3q0f3ju1i].[Latitude (generated)]</rows>
        <cols>[federated.1tusbzf02u76j41dptf3q0f3ju1i].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{0E209574-5A81-4D91-A21A-15EA68988D6E}' />
    </worksheet>
    <worksheet name='Confirmed Cases Trend Line'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_data (covid_19_data)' name='federated.1tusbzf02u76j41dptf3q0f3ju1i' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='Top 15' caption='Top N' datatype='integer' name='[Parameter 2]' param-domain-type='list' role='measure' type='quantitative' value='15'>
              <calculation class='tableau' formula='15' />
              <aliases>
                <alias key='10' value='Top 10' />
                <alias key='15' value='Top 15' />
                <alias key='20' value='Top 20' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1tusbzf02u76j41dptf3q0f3ju1i'>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Observation Date' datatype='string' name='[ObservationDate]' role='dimension' type='nominal' />
            <column datatype='string' name='[Province/State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[ObservationDate]' derivation='None' name='[none:ObservationDate:nk]' pivot='key' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1tusbzf02u76j41dptf3q0f3ju1i].[Action (Country/Region,Province/State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_AA58AE7D44D347BFBEBAC4BC683C38A8]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country/Region]' />
              <groupfilter function='level-members' level='[Province/State]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1tusbzf02u76j41dptf3q0f3ju1i].[none:ObservationDate:nk]'>
            <groupfilter count='[Parameters].[Parameter 2]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Confirmed])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:ObservationDate:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1tusbzf02u76j41dptf3q0f3ju1i].[Action (Country/Region,Province/State)]</column>
            <column>[federated.1tusbzf02u76j41dptf3q0f3ju1i].[none:ObservationDate:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1tusbzf02u76j41dptf3q0f3ju1i].[sum:Confirmed:qk]' field-type='quantitative' max='101419961' min='-5260664' range-type='fixed' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#59a14f' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1tusbzf02u76j41dptf3q0f3ju1i].[sum:Confirmed:qk]</rows>
        <cols>[federated.1tusbzf02u76j41dptf3q0f3ju1i].[none:ObservationDate:nk]</cols>
      </table>
      <simple-id uuid='{50DA01DE-1407-4D93-B806-85AB124D3BF0}' />
    </worksheet>
    <worksheet name='Confirmed vs Deaths'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_data (covid_19_data)' name='federated.1tusbzf02u76j41dptf3q0f3ju1i' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Start Date' datatype='string' name='[Observation Date Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;4/3/2020&quot;'>
              <calculation class='tableau' formula='&quot;4/3/2020&quot;' />
            </column>
            <column caption='End Date' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;06/16/2020&quot;'>
              <calculation class='tableau' formula='&quot;06/16/2020&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1tusbzf02u76j41dptf3q0f3ju1i'>
            <column caption='Date Range' datatype='boolean' name='[Calculation_273030745838575616]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[ObservationDate]&lt;=[Parameters].[Observation Date Parameter]AND [Parameters].[Parameter 1]&lt;=[ObservationDate]' />
            </column>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column caption='Observation Date' datatype='string' name='[ObservationDate]' role='dimension' type='nominal' />
            <column datatype='string' name='[Province/State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_273030745838575616]' derivation='None' name='[none:Calculation_273030745838575616:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1tusbzf02u76j41dptf3q0f3ju1i].[Action (Country/Region,Province/State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_AA58AE7D44D347BFBEBAC4BC683C38A8]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country/Region]' />
              <groupfilter function='level-members' level='[Province/State]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1tusbzf02u76j41dptf3q0f3ju1i].[none:Calculation_273030745838575616:nk]'>
            <groupfilter function='member' level='[none:Calculation_273030745838575616:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1tusbzf02u76j41dptf3q0f3ju1i].[none:Country/Region:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1tusbzf02u76j41dptf3q0f3ju1i].[sum:Confirmed:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1tusbzf02u76j41dptf3q0f3ju1i].[Action (Country/Region,Province/State)]</column>
            <column>[federated.1tusbzf02u76j41dptf3q0f3ju1i].[none:Calculation_273030745838575616:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1tusbzf02u76j41dptf3q0f3ju1i].[sum:Deaths:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1tusbzf02u76j41dptf3q0f3ju1i].[sum:Confirmed:qk]</rows>
        <cols>[federated.1tusbzf02u76j41dptf3q0f3ju1i].[none:Country/Region:nk]</cols>
      </table>
      <simple-id uuid='{FED92BD8-002C-41D8-B5ED-997DE5D88DB1}' />
    </worksheet>
    <worksheet name='Confirmed vs Recovered'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_data (covid_19_data)' name='federated.1tusbzf02u76j41dptf3q0f3ju1i' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Start Date' datatype='string' name='[Observation Date Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;4/3/2020&quot;'>
              <calculation class='tableau' formula='&quot;4/3/2020&quot;' />
            </column>
            <column caption='End Date' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;06/16/2020&quot;'>
              <calculation class='tableau' formula='&quot;06/16/2020&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1tusbzf02u76j41dptf3q0f3ju1i'>
            <column caption='Date Range' datatype='boolean' name='[Calculation_273030745838575616]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[ObservationDate]&lt;=[Parameters].[Observation Date Parameter]AND [Parameters].[Parameter 1]&lt;=[ObservationDate]' />
            </column>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Observation Date' datatype='string' name='[ObservationDate]' role='dimension' type='nominal' />
            <column datatype='string' name='[Province/State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='integer' name='[Recovered]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_273030745838575616]' derivation='None' name='[none:Calculation_273030745838575616:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Recovered]' derivation='Sum' name='[sum:Recovered:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1tusbzf02u76j41dptf3q0f3ju1i].[Action (Country/Region,Province/State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_AA58AE7D44D347BFBEBAC4BC683C38A8]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country/Region]' />
              <groupfilter function='level-members' level='[Province/State]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1tusbzf02u76j41dptf3q0f3ju1i].[none:Calculation_273030745838575616:nk]'>
            <groupfilter function='member' level='[none:Calculation_273030745838575616:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1tusbzf02u76j41dptf3q0f3ju1i].[none:Country/Region:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1tusbzf02u76j41dptf3q0f3ju1i].[sum:Confirmed:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1tusbzf02u76j41dptf3q0f3ju1i].[Action (Country/Region,Province/State)]</column>
            <column>[federated.1tusbzf02u76j41dptf3q0f3ju1i].[none:Calculation_273030745838575616:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='div-level' scope='rows' value='10' />
            <format attr='div-level' scope='cols' value='10' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1tusbzf02u76j41dptf3q0f3ju1i].[sum:Recovered:qk]' />
            </encodings>
            <reference-line axis-column='[federated.1tusbzf02u76j41dptf3q0f3ju1i].[sum:Confirmed:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='none' probability='95' scope='per-cell' value-column='[federated.1tusbzf02u76j41dptf3q0f3ju1i].[sum:Recovered:qk]' z-order='2' />
            <reference-line axis-column='[federated.1tusbzf02u76j41dptf3q0f3ju1i].[sum:Confirmed:qk]' enable-instant-analytics='true' fill-above='true' fill-below='true' formula='average' id='refline1' label-type='none' percentage-bands='true' probability='95' scope='per-cell' symmetric='false' value-column='[federated.1tusbzf02u76j41dptf3q0f3ju1i].[sum:Recovered:qk]' z-order='1'>
              <reference-line-value percentage='60' />
              <reference-line-value percentage='80' />
            </reference-line>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1tusbzf02u76j41dptf3q0f3ju1i].[sum:Confirmed:qk]</rows>
        <cols>[federated.1tusbzf02u76j41dptf3q0f3ju1i].[none:Country/Region:nk]</cols>
      </table>
      <simple-id uuid='{7CECF37D-B33A-4A44-AB8D-BA7D9816CC9D}' />
    </worksheet>
    <worksheet name='Death Rate by Country'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_data (covid_19_data)' name='federated.1tusbzf02u76j41dptf3q0f3ju1i' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='Top 15' caption='Top N' datatype='integer' name='[Parameter 2]' param-domain-type='list' role='measure' type='quantitative' value='15'>
              <calculation class='tableau' formula='15' />
              <aliases>
                <alias key='10' value='Top 10' />
                <alias key='15' value='Top 15' />
                <alias key='20' value='Top 20' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1tusbzf02u76j41dptf3q0f3ju1i'>
            <column caption='Death Rate' datatype='real' name='[Calculation_176203353493499910]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Deaths]/([Confirmed])' />
            </column>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_176203353493499910]' derivation='Sum' name='[pcto:sum:Calculation_176203353493499910:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_176203353493499910]' derivation='Sum' name='[sum:Calculation_176203353493499910:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1tusbzf02u76j41dptf3q0f3ju1i].[none:Country/Region:nk]'>
            <groupfilter count='[Parameters].[Parameter 2]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Calculation_176203353493499910])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country/Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1tusbzf02u76j41dptf3q0f3ju1i].[none:Country/Region:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1tusbzf02u76j41dptf3q0f3ju1i].[sum:Calculation_176203353493499910:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1tusbzf02u76j41dptf3q0f3ju1i].[none:Country/Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1tusbzf02u76j41dptf3q0f3ju1i].[none:Country/Region:nk]</rows>
        <cols>[federated.1tusbzf02u76j41dptf3q0f3ju1i].[pcto:sum:Calculation_176203353493499910:qk:2]</cols>
      </table>
      <simple-id uuid='{6A4F119C-A83E-45C1-8E4E-65673FB4A522}' />
    </worksheet>
    <worksheet name='Recovered Cases By Country'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_data (covid_19_data)' name='federated.1tusbzf02u76j41dptf3q0f3ju1i' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Start Date' datatype='string' name='[Observation Date Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;4/3/2020&quot;'>
              <calculation class='tableau' formula='&quot;4/3/2020&quot;' />
            </column>
            <column caption='End Date' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;06/16/2020&quot;'>
              <calculation class='tableau' formula='&quot;06/16/2020&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1tusbzf02u76j41dptf3q0f3ju1i'>
            <column caption='Date Range' datatype='boolean' name='[Calculation_273030745838575616]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[ObservationDate]&lt;=[Parameters].[Observation Date Parameter]AND [Parameters].[Parameter 1]&lt;=[ObservationDate]' />
            </column>
            <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Observation Date' datatype='string' name='[ObservationDate]' role='dimension' type='nominal' />
            <column datatype='string' name='[Province/State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='integer' name='[Recovered]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_273030745838575616]' derivation='None' name='[none:Calculation_273030745838575616:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Recovered]' derivation='Sum' name='[sum:Recovered:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1tusbzf02u76j41dptf3q0f3ju1i].[Action (Country/Region,Province/State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_AA58AE7D44D347BFBEBAC4BC683C38A8]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country/Region]' />
              <groupfilter function='level-members' level='[Province/State]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1tusbzf02u76j41dptf3q0f3ju1i].[none:Calculation_273030745838575616:nk]'>
            <groupfilter function='member' level='[none:Calculation_273030745838575616:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1tusbzf02u76j41dptf3q0f3ju1i].[none:Country/Region:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1tusbzf02u76j41dptf3q0f3ju1i].[sum:Recovered:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1tusbzf02u76j41dptf3q0f3ju1i].[none:Calculation_273030745838575616:nk]</column>
            <column>[federated.1tusbzf02u76j41dptf3q0f3ju1i].[Action (Country/Region,Province/State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='height-header' value='17' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[Parameters].[Observation Date Parameter]' />
              <lod column='[Parameters].[Parameter 1]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1tusbzf02u76j41dptf3q0f3ju1i].[sum:Recovered:qk]</rows>
        <cols>[federated.1tusbzf02u76j41dptf3q0f3ju1i].[none:Country/Region:nk]</cols>
      </table>
      <simple-id uuid='{07FFB03F-D530-46DA-80C3-52AB08AD9039}' />
    </worksheet>
    <worksheet name='Recovery rate by Country'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_data (covid_19_data)' name='federated.1tusbzf02u76j41dptf3q0f3ju1i' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='Top 15' caption='Top N' datatype='integer' name='[Parameter 2]' param-domain-type='list' role='measure' type='quantitative' value='15'>
              <calculation class='tableau' formula='15' />
              <aliases>
                <alias key='10' value='Top 10' />
                <alias key='15' value='Top 15' />
                <alias key='20' value='Top 20' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1tusbzf02u76j41dptf3q0f3ju1i'>
            <column caption='Recovery Rate' datatype='real' name='[Calculation_176203353501544455]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Recovered]/[Confirmed]' />
            </column>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Recovered]' role='measure' type='quantitative' />
            <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_176203353501544455]' derivation='Sum' name='[pcto:sum:Calculation_176203353501544455:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_176203353501544455]' derivation='Sum' name='[sum:Calculation_176203353501544455:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1tusbzf02u76j41dptf3q0f3ju1i].[none:Country/Region:nk]'>
            <groupfilter count='[Parameters].[Parameter 2]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Calculation_176203353501544455])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country/Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1tusbzf02u76j41dptf3q0f3ju1i].[none:Country/Region:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1tusbzf02u76j41dptf3q0f3ju1i].[sum:Calculation_176203353501544455:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1tusbzf02u76j41dptf3q0f3ju1i].[none:Country/Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f9a655' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1tusbzf02u76j41dptf3q0f3ju1i].[none:Country/Region:nk]</rows>
        <cols>[federated.1tusbzf02u76j41dptf3q0f3ju1i].[pcto:sum:Calculation_176203353501544455:qk]</cols>
      </table>
      <simple-id uuid='{853B900C-5C23-4FC3-8B9C-BA3B860C4EEA}' />
    </worksheet>
    <worksheet name='Top N cases'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_data (covid_19_data)' name='federated.1tusbzf02u76j41dptf3q0f3ju1i' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='Top 15' caption='Top N' datatype='integer' name='[Parameter 2]' param-domain-type='list' role='measure' type='quantitative' value='15'>
              <calculation class='tableau' formula='15' />
              <aliases>
                <alias key='10' value='Top 10' />
                <alias key='15' value='Top 15' />
                <alias key='20' value='Top 20' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1tusbzf02u76j41dptf3q0f3ju1i'>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='string' name='[Province/State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Province/State]' derivation='None' name='[none:Province/State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1tusbzf02u76j41dptf3q0f3ju1i].[none:Province/State:nk]'>
            <groupfilter count='[Parameters].[Parameter 2]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Confirmed])' function='order' user:ui-marker='order'>
                <groupfilter from='&quot; Montreal, QC&quot;' function='range' level='[none:Province/State:nk]' to='&quot;Zuid-Holland&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1tusbzf02u76j41dptf3q0f3ju1i].[none:Province/State:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1tusbzf02u76j41dptf3q0f3ju1i].[sum:Confirmed:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1tusbzf02u76j41dptf3q0f3ju1i].[none:Province/State:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#59a14f' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1tusbzf02u76j41dptf3q0f3ju1i].[none:Province/State:nk]</rows>
        <cols>[federated.1tusbzf02u76j41dptf3q0f3ju1i].[sum:Confirmed:qk]</cols>
      </table>
      <simple-id uuid='{BC896D79-AF10-4577-8A13-4E04F5D95B17}' />
    </worksheet>
    <worksheet name='datewise cofirmed cases'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_data (covid_19_data)' name='federated.1tusbzf02u76j41dptf3q0f3ju1i' />
          </datasources>
          <datasource-dependencies datasource='federated.1tusbzf02u76j41dptf3q0f3ju1i'>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column caption='Observation Date' datatype='string' name='[ObservationDate]' role='dimension' type='nominal' />
            <column-instance column='[ObservationDate]' derivation='None' name='[none:ObservationDate:nk]' pivot='key' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1tusbzf02u76j41dptf3q0f3ju1i].[none:ObservationDate:nk]'>
            <groupfilter function='level-members' level='[none:ObservationDate:nk]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1tusbzf02u76j41dptf3q0f3ju1i].[none:ObservationDate:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
          </pane>
        </panes>
        <rows>[federated.1tusbzf02u76j41dptf3q0f3ju1i].[sum:Confirmed:qk]</rows>
        <cols>[federated.1tusbzf02u76j41dptf3q0f3ju1i].[none:ObservationDate:nk]</cols>
      </table>
      <simple-id uuid='{30C1F3F2-247B-403C-8DAF-FB16AA848148}' />
    </worksheet>
    <worksheet name='last updated confirmed cases'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_data (covid_19_data)' name='federated.1tusbzf02u76j41dptf3q0f3ju1i' />
          </datasources>
          <datasource-dependencies datasource='federated.1tusbzf02u76j41dptf3q0f3ju1i'>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='datetime' name='[Last Update]' role='dimension' type='ordinal' />
            <column-instance column='[Last Update]' derivation='None' name='[none:Last Update:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1tusbzf02u76j41dptf3q0f3ju1i].[none:Last Update:ok]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1tusbzf02u76j41dptf3q0f3ju1i].[sum:Confirmed:qk]' shelf='rows' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1tusbzf02u76j41dptf3q0f3ju1i].[none:Last Update:ok]</rows>
        <cols>[federated.1tusbzf02u76j41dptf3q0f3ju1i].[sum:Confirmed:qk]</cols>
        <show-full-range>
          <column>[federated.1tusbzf02u76j41dptf3q0f3ju1i].[Death Rate (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{F1BEF908-0DAC-4AC0-A183-9F6229A149E3}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Start Date' datatype='string' name='[Observation Date Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;4/3/2020&quot;'>
          <calculation class='tableau' formula='&quot;4/3/2020&quot;' />
          <members>
            <member value='&quot;1/1/2021&quot;' />
            <member value='&quot;1/2/2020&quot;' />
            <member value='&quot;1/3/2020&quot;' />
            <member value='&quot;1/4/2020&quot;' />
            <member value='&quot;1/5/2020&quot;' />
            <member value='&quot;1/6/2020&quot;' />
            <member value='&quot;1/7/2020&quot;' />
            <member value='&quot;1/8/2020&quot;' />
            <member value='&quot;1/9/2020&quot;' />
            <member value='&quot;1/10/2020&quot;' />
            <member value='&quot;1/11/2020&quot;' />
            <member value='&quot;1/12/2020&quot;' />
            <member value='&quot;2/1/2021&quot;' />
            <member value='&quot;2/2/2020&quot;' />
            <member value='&quot;2/3/2020&quot;' />
            <member value='&quot;2/4/2020&quot;' />
            <member value='&quot;2/5/2020&quot;' />
            <member value='&quot;2/6/2020&quot;' />
            <member value='&quot;2/7/2020&quot;' />
            <member value='&quot;2/8/2020&quot;' />
            <member value='&quot;2/9/2020&quot;' />
            <member value='&quot;2/10/2020&quot;' />
            <member value='&quot;2/11/2020&quot;' />
            <member value='&quot;2/12/2020&quot;' />
            <member value='&quot;3/1/2021&quot;' />
            <member value='&quot;3/2/2020&quot;' />
            <member value='&quot;3/3/2020&quot;' />
            <member value='&quot;3/4/2020&quot;' />
            <member value='&quot;3/5/2020&quot;' />
            <member value='&quot;3/6/2020&quot;' />
            <member value='&quot;3/7/2020&quot;' />
            <member value='&quot;3/8/2020&quot;' />
            <member value='&quot;3/9/2020&quot;' />
            <member value='&quot;3/10/2020&quot;' />
            <member value='&quot;3/11/2020&quot;' />
            <member value='&quot;3/12/2020&quot;' />
            <member value='&quot;4/1/2021&quot;' />
            <member value='&quot;4/2/2020&quot;' />
            <member value='&quot;4/3/2020&quot;' />
            <member value='&quot;4/4/2020&quot;' />
            <member value='&quot;4/5/2020&quot;' />
            <member value='&quot;4/6/2020&quot;' />
            <member value='&quot;4/7/2020&quot;' />
            <member value='&quot;4/8/2020&quot;' />
            <member value='&quot;4/9/2020&quot;' />
            <member value='&quot;4/10/2020&quot;' />
            <member value='&quot;4/11/2020&quot;' />
            <member value='&quot;4/12/2020&quot;' />
            <member value='&quot;5/1/2021&quot;' />
            <member value='&quot;5/2/2020&quot;' />
            <member value='&quot;5/3/2020&quot;' />
            <member value='&quot;5/4/2020&quot;' />
            <member value='&quot;5/5/2020&quot;' />
            <member value='&quot;5/6/2020&quot;' />
            <member value='&quot;5/7/2020&quot;' />
            <member value='&quot;5/8/2020&quot;' />
            <member value='&quot;5/9/2020&quot;' />
            <member value='&quot;5/10/2020&quot;' />
            <member value='&quot;5/11/2020&quot;' />
            <member value='&quot;5/12/2020&quot;' />
            <member value='&quot;6/1/2021&quot;' />
            <member value='&quot;6/2/2020&quot;' />
            <member value='&quot;6/3/2020&quot;' />
            <member value='&quot;6/4/2020&quot;' />
            <member value='&quot;6/5/2020&quot;' />
            <member value='&quot;6/6/2020&quot;' />
            <member value='&quot;6/7/2020&quot;' />
            <member value='&quot;6/8/2020&quot;' />
            <member value='&quot;6/9/2020&quot;' />
            <member value='&quot;6/10/2020&quot;' />
            <member value='&quot;6/11/2020&quot;' />
            <member value='&quot;6/12/2020&quot;' />
            <member value='&quot;7/1/2021&quot;' />
            <member value='&quot;7/2/2020&quot;' />
            <member value='&quot;7/3/2020&quot;' />
            <member value='&quot;7/4/2020&quot;' />
            <member value='&quot;7/5/2020&quot;' />
            <member value='&quot;7/6/2020&quot;' />
            <member value='&quot;7/7/2020&quot;' />
            <member value='&quot;7/8/2020&quot;' />
            <member value='&quot;7/9/2020&quot;' />
            <member value='&quot;7/10/2020&quot;' />
            <member value='&quot;7/11/2020&quot;' />
            <member value='&quot;7/12/2020&quot;' />
            <member value='&quot;8/1/2021&quot;' />
            <member value='&quot;8/2/2020&quot;' />
            <member value='&quot;8/3/2020&quot;' />
            <member value='&quot;8/4/2020&quot;' />
            <member value='&quot;8/5/2020&quot;' />
            <member value='&quot;8/6/2020&quot;' />
            <member value='&quot;8/7/2020&quot;' />
            <member value='&quot;8/8/2020&quot;' />
            <member value='&quot;8/9/2020&quot;' />
            <member value='&quot;8/10/2020&quot;' />
            <member value='&quot;8/11/2020&quot;' />
            <member value='&quot;8/12/2020&quot;' />
            <member value='&quot;9/1/2021&quot;' />
            <member value='&quot;9/2/2020&quot;' />
            <member value='&quot;9/3/2020&quot;' />
            <member value='&quot;9/4/2020&quot;' />
            <member value='&quot;9/5/2020&quot;' />
            <member value='&quot;9/6/2020&quot;' />
            <member value='&quot;9/7/2020&quot;' />
            <member value='&quot;9/8/2020&quot;' />
            <member value='&quot;9/9/2020&quot;' />
            <member value='&quot;9/10/2020&quot;' />
            <member value='&quot;9/11/2020&quot;' />
            <member value='&quot;9/12/2020&quot;' />
            <member value='&quot;01/13/2021&quot;' />
            <member value='&quot;01/14/2021&quot;' />
            <member value='&quot;01/15/2021&quot;' />
            <member value='&quot;01/16/2021&quot;' />
            <member value='&quot;01/17/2021&quot;' />
            <member value='&quot;01/18/2021&quot;' />
            <member value='&quot;01/19/2021&quot;' />
            <member value='&quot;01/22/2020&quot;' />
            <member value='&quot;01/23/2020&quot;' />
            <member value='&quot;01/24/2020&quot;' />
            <member value='&quot;01/25/2020&quot;' />
            <member value='&quot;01/26/2020&quot;' />
            <member value='&quot;01/27/2020&quot;' />
            <member value='&quot;01/28/2020&quot;' />
            <member value='&quot;01/29/2020&quot;' />
            <member value='&quot;01/30/2020&quot;' />
            <member value='&quot;01/31/2020&quot;' />
            <member value='&quot;02/13/2020&quot;' />
            <member value='&quot;02/14/2020&quot;' />
            <member value='&quot;02/15/2020&quot;' />
            <member value='&quot;02/16/2020&quot;' />
            <member value='&quot;02/17/2020&quot;' />
            <member value='&quot;02/18/2020&quot;' />
            <member value='&quot;02/19/2020&quot;' />
            <member value='&quot;02/20/2020&quot;' />
            <member value='&quot;02/21/2020&quot;' />
            <member value='&quot;02/22/2020&quot;' />
            <member value='&quot;02/23/2020&quot;' />
            <member value='&quot;02/24/2020&quot;' />
            <member value='&quot;02/25/2020&quot;' />
            <member value='&quot;02/26/2020&quot;' />
            <member value='&quot;02/27/2020&quot;' />
            <member value='&quot;02/28/2020&quot;' />
            <member value='&quot;02/29/2020&quot;' />
            <member value='&quot;03/13/2020&quot;' />
            <member value='&quot;03/14/2020&quot;' />
            <member value='&quot;03/15/2020&quot;' />
            <member value='&quot;03/16/2020&quot;' />
            <member value='&quot;03/17/2020&quot;' />
            <member value='&quot;03/18/2020&quot;' />
            <member value='&quot;03/19/2020&quot;' />
            <member value='&quot;03/20/2020&quot;' />
            <member value='&quot;03/21/2020&quot;' />
            <member value='&quot;03/22/2020&quot;' />
            <member value='&quot;03/23/2020&quot;' />
            <member value='&quot;03/24/2020&quot;' />
            <member value='&quot;03/25/2020&quot;' />
            <member value='&quot;03/26/2020&quot;' />
            <member value='&quot;03/27/2020&quot;' />
            <member value='&quot;03/28/2020&quot;' />
            <member value='&quot;03/29/2020&quot;' />
            <member value='&quot;03/30/2020&quot;' />
            <member value='&quot;03/31/2020&quot;' />
            <member value='&quot;04/13/2020&quot;' />
            <member value='&quot;04/14/2020&quot;' />
            <member value='&quot;04/15/2020&quot;' />
            <member value='&quot;04/16/2020&quot;' />
            <member value='&quot;04/17/2020&quot;' />
            <member value='&quot;04/18/2020&quot;' />
            <member value='&quot;04/19/2020&quot;' />
            <member value='&quot;04/20/2020&quot;' />
            <member value='&quot;04/21/2020&quot;' />
            <member value='&quot;04/22/2020&quot;' />
            <member value='&quot;04/23/2020&quot;' />
            <member value='&quot;04/24/2020&quot;' />
            <member value='&quot;04/25/2020&quot;' />
            <member value='&quot;04/26/2020&quot;' />
            <member value='&quot;04/27/2020&quot;' />
            <member value='&quot;04/28/2020&quot;' />
            <member value='&quot;04/29/2020&quot;' />
            <member value='&quot;04/30/2020&quot;' />
            <member value='&quot;05/13/2020&quot;' />
            <member value='&quot;05/14/2020&quot;' />
            <member value='&quot;05/15/2020&quot;' />
            <member value='&quot;05/16/2020&quot;' />
            <member value='&quot;05/17/2020&quot;' />
            <member value='&quot;05/18/2020&quot;' />
            <member value='&quot;05/19/2020&quot;' />
            <member value='&quot;05/20/2020&quot;' />
            <member value='&quot;05/21/2020&quot;' />
            <member value='&quot;05/22/2020&quot;' />
            <member value='&quot;05/23/2020&quot;' />
            <member value='&quot;05/24/2020&quot;' />
            <member value='&quot;05/25/2020&quot;' />
            <member value='&quot;05/26/2020&quot;' />
            <member value='&quot;05/27/2020&quot;' />
            <member value='&quot;05/28/2020&quot;' />
            <member value='&quot;05/29/2020&quot;' />
            <member value='&quot;05/30/2020&quot;' />
            <member value='&quot;05/31/2020&quot;' />
            <member value='&quot;06/13/2020&quot;' />
            <member value='&quot;06/14/2020&quot;' />
            <member value='&quot;06/15/2020&quot;' />
            <member value='&quot;06/16/2020&quot;' />
            <member value='&quot;06/17/2020&quot;' />
            <member value='&quot;06/18/2020&quot;' />
            <member value='&quot;06/19/2020&quot;' />
            <member value='&quot;06/20/2020&quot;' />
            <member value='&quot;06/21/2020&quot;' />
            <member value='&quot;06/22/2020&quot;' />
            <member value='&quot;06/23/2020&quot;' />
            <member value='&quot;06/24/2020&quot;' />
            <member value='&quot;06/25/2020&quot;' />
            <member value='&quot;06/26/2020&quot;' />
            <member value='&quot;06/27/2020&quot;' />
            <member value='&quot;06/28/2020&quot;' />
            <member value='&quot;06/29/2020&quot;' />
            <member value='&quot;06/30/2020&quot;' />
            <member value='&quot;07/13/2020&quot;' />
            <member value='&quot;07/14/2020&quot;' />
            <member value='&quot;07/15/2020&quot;' />
            <member value='&quot;07/16/2020&quot;' />
            <member value='&quot;07/17/2020&quot;' />
            <member value='&quot;07/18/2020&quot;' />
            <member value='&quot;07/19/2020&quot;' />
            <member value='&quot;07/20/2020&quot;' />
            <member value='&quot;07/21/2020&quot;' />
            <member value='&quot;07/22/2020&quot;' />
            <member value='&quot;07/23/2020&quot;' />
            <member value='&quot;07/24/2020&quot;' />
            <member value='&quot;07/25/2020&quot;' />
            <member value='&quot;07/26/2020&quot;' />
            <member value='&quot;07/27/2020&quot;' />
            <member value='&quot;07/28/2020&quot;' />
            <member value='&quot;07/29/2020&quot;' />
            <member value='&quot;07/30/2020&quot;' />
            <member value='&quot;07/31/2020&quot;' />
            <member value='&quot;08/13/2020&quot;' />
            <member value='&quot;08/14/2020&quot;' />
            <member value='&quot;08/15/2020&quot;' />
            <member value='&quot;08/16/2020&quot;' />
            <member value='&quot;08/17/2020&quot;' />
            <member value='&quot;08/18/2020&quot;' />
            <member value='&quot;08/19/2020&quot;' />
            <member value='&quot;08/20/2020&quot;' />
            <member value='&quot;08/21/2020&quot;' />
            <member value='&quot;08/22/2020&quot;' />
            <member value='&quot;08/23/2020&quot;' />
            <member value='&quot;08/24/2020&quot;' />
            <member value='&quot;08/25/2020&quot;' />
            <member value='&quot;08/26/2020&quot;' />
            <member value='&quot;08/27/2020&quot;' />
            <member value='&quot;08/28/2020&quot;' />
            <member value='&quot;08/29/2020&quot;' />
            <member value='&quot;08/30/2020&quot;' />
            <member value='&quot;08/31/2020&quot;' />
            <member value='&quot;09/13/2020&quot;' />
            <member value='&quot;09/14/2020&quot;' />
            <member value='&quot;09/15/2020&quot;' />
            <member value='&quot;09/16/2020&quot;' />
            <member value='&quot;09/17/2020&quot;' />
            <member value='&quot;09/18/2020&quot;' />
            <member value='&quot;09/19/2020&quot;' />
            <member value='&quot;09/20/2020&quot;' />
            <member value='&quot;09/21/2020&quot;' />
            <member value='&quot;09/22/2020&quot;' />
            <member value='&quot;09/23/2020&quot;' />
            <member value='&quot;09/24/2020&quot;' />
            <member value='&quot;09/25/2020&quot;' />
            <member value='&quot;09/26/2020&quot;' />
            <member value='&quot;09/27/2020&quot;' />
            <member value='&quot;09/28/2020&quot;' />
            <member value='&quot;09/29/2020&quot;' />
            <member value='&quot;09/30/2020&quot;' />
            <member value='&quot;10/1/2021&quot;' />
            <member value='&quot;10/2/2020&quot;' />
            <member value='&quot;10/3/2020&quot;' />
            <member value='&quot;10/4/2020&quot;' />
            <member value='&quot;10/5/2020&quot;' />
            <member value='&quot;10/6/2020&quot;' />
            <member value='&quot;10/7/2020&quot;' />
            <member value='&quot;10/8/2020&quot;' />
            <member value='&quot;10/9/2020&quot;' />
            <member value='&quot;10/10/2020&quot;' />
            <member value='&quot;10/11/2020&quot;' />
            <member value='&quot;10/12/2020&quot;' />
            <member value='&quot;10/13/2020&quot;' />
            <member value='&quot;10/14/2020&quot;' />
            <member value='&quot;10/15/2020&quot;' />
            <member value='&quot;10/16/2020&quot;' />
            <member value='&quot;10/17/2020&quot;' />
            <member value='&quot;10/18/2020&quot;' />
            <member value='&quot;10/19/2020&quot;' />
            <member value='&quot;10/20/2020&quot;' />
            <member value='&quot;10/21/2020&quot;' />
            <member value='&quot;10/22/2020&quot;' />
            <member value='&quot;10/23/2020&quot;' />
            <member value='&quot;10/24/2020&quot;' />
            <member value='&quot;10/25/2020&quot;' />
            <member value='&quot;10/26/2020&quot;' />
            <member value='&quot;10/27/2020&quot;' />
            <member value='&quot;10/28/2020&quot;' />
            <member value='&quot;10/29/2020&quot;' />
            <member value='&quot;10/30/2020&quot;' />
            <member value='&quot;10/31/2020&quot;' />
            <member value='&quot;11/1/2021&quot;' />
            <member value='&quot;11/2/2020&quot;' />
            <member value='&quot;11/3/2020&quot;' />
            <member value='&quot;11/4/2020&quot;' />
            <member value='&quot;11/5/2020&quot;' />
            <member value='&quot;11/6/2020&quot;' />
            <member value='&quot;11/7/2020&quot;' />
            <member value='&quot;11/8/2020&quot;' />
            <member value='&quot;11/9/2020&quot;' />
            <member value='&quot;11/10/2020&quot;' />
            <member value='&quot;11/11/2020&quot;' />
            <member value='&quot;11/12/2020&quot;' />
            <member value='&quot;11/13/2020&quot;' />
            <member value='&quot;11/14/2020&quot;' />
            <member value='&quot;11/15/2020&quot;' />
            <member value='&quot;11/16/2020&quot;' />
            <member value='&quot;11/17/2020&quot;' />
            <member value='&quot;11/18/2020&quot;' />
            <member value='&quot;11/19/2020&quot;' />
            <member value='&quot;11/20/2020&quot;' />
            <member value='&quot;11/21/2020&quot;' />
            <member value='&quot;11/22/2020&quot;' />
            <member value='&quot;11/23/2020&quot;' />
            <member value='&quot;11/24/2020&quot;' />
            <member value='&quot;11/25/2020&quot;' />
            <member value='&quot;11/26/2020&quot;' />
            <member value='&quot;11/27/2020&quot;' />
            <member value='&quot;11/28/2020&quot;' />
            <member value='&quot;11/29/2020&quot;' />
            <member value='&quot;11/30/2020&quot;' />
            <member value='&quot;12/1/2021&quot;' />
            <member value='&quot;12/2/2020&quot;' />
            <member value='&quot;12/3/2020&quot;' />
            <member value='&quot;12/4/2020&quot;' />
            <member value='&quot;12/5/2020&quot;' />
            <member value='&quot;12/6/2020&quot;' />
            <member value='&quot;12/7/2020&quot;' />
            <member value='&quot;12/8/2020&quot;' />
            <member value='&quot;12/9/2020&quot;' />
            <member value='&quot;12/10/2020&quot;' />
            <member value='&quot;12/11/2020&quot;' />
            <member value='&quot;12/12/2020&quot;' />
            <member value='&quot;12/13/2020&quot;' />
            <member value='&quot;12/14/2020&quot;' />
            <member value='&quot;12/15/2020&quot;' />
            <member value='&quot;12/16/2020&quot;' />
            <member value='&quot;12/17/2020&quot;' />
            <member value='&quot;12/18/2020&quot;' />
            <member value='&quot;12/19/2020&quot;' />
            <member value='&quot;12/20/2020&quot;' />
            <member value='&quot;12/21/2020&quot;' />
            <member value='&quot;12/22/2020&quot;' />
            <member value='&quot;12/23/2020&quot;' />
            <member value='&quot;12/24/2020&quot;' />
            <member value='&quot;12/25/2020&quot;' />
            <member value='&quot;12/26/2020&quot;' />
            <member value='&quot;12/27/2020&quot;' />
            <member value='&quot;12/28/2020&quot;' />
            <member value='&quot;12/29/2020&quot;' />
            <member value='&quot;12/30/2020&quot;' />
            <member value='&quot;12/31/2020&quot;' />
          </members>
        </column>
        <column caption='End Date' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;06/16/2020&quot;'>
          <calculation class='tableau' formula='&quot;06/16/2020&quot;' />
          <members>
            <member value='&quot;1/1/2021&quot;' />
            <member value='&quot;1/2/2020&quot;' />
            <member value='&quot;1/3/2020&quot;' />
            <member value='&quot;1/4/2020&quot;' />
            <member value='&quot;1/5/2020&quot;' />
            <member value='&quot;1/6/2020&quot;' />
            <member value='&quot;1/7/2020&quot;' />
            <member value='&quot;1/8/2020&quot;' />
            <member value='&quot;1/9/2020&quot;' />
            <member value='&quot;1/10/2020&quot;' />
            <member value='&quot;1/11/2020&quot;' />
            <member value='&quot;1/12/2020&quot;' />
            <member value='&quot;2/1/2021&quot;' />
            <member value='&quot;2/2/2020&quot;' />
            <member value='&quot;2/3/2020&quot;' />
            <member value='&quot;2/4/2020&quot;' />
            <member value='&quot;2/5/2020&quot;' />
            <member value='&quot;2/6/2020&quot;' />
            <member value='&quot;2/7/2020&quot;' />
            <member value='&quot;2/8/2020&quot;' />
            <member value='&quot;2/9/2020&quot;' />
            <member value='&quot;2/10/2020&quot;' />
            <member value='&quot;2/11/2020&quot;' />
            <member value='&quot;2/12/2020&quot;' />
            <member value='&quot;3/1/2021&quot;' />
            <member value='&quot;3/2/2020&quot;' />
            <member value='&quot;3/3/2020&quot;' />
            <member value='&quot;3/4/2020&quot;' />
            <member value='&quot;3/5/2020&quot;' />
            <member value='&quot;3/6/2020&quot;' />
            <member value='&quot;3/7/2020&quot;' />
            <member value='&quot;3/8/2020&quot;' />
            <member value='&quot;3/9/2020&quot;' />
            <member value='&quot;3/10/2020&quot;' />
            <member value='&quot;3/11/2020&quot;' />
            <member value='&quot;3/12/2020&quot;' />
            <member value='&quot;4/1/2021&quot;' />
            <member value='&quot;4/2/2020&quot;' />
            <member value='&quot;4/3/2020&quot;' />
            <member value='&quot;4/4/2020&quot;' />
            <member value='&quot;4/5/2020&quot;' />
            <member value='&quot;4/6/2020&quot;' />
            <member value='&quot;4/7/2020&quot;' />
            <member value='&quot;4/8/2020&quot;' />
            <member value='&quot;4/9/2020&quot;' />
            <member value='&quot;4/10/2020&quot;' />
            <member value='&quot;4/11/2020&quot;' />
            <member value='&quot;4/12/2020&quot;' />
            <member value='&quot;5/1/2021&quot;' />
            <member value='&quot;5/2/2020&quot;' />
            <member value='&quot;5/3/2020&quot;' />
            <member value='&quot;5/4/2020&quot;' />
            <member value='&quot;5/5/2020&quot;' />
            <member value='&quot;5/6/2020&quot;' />
            <member value='&quot;5/7/2020&quot;' />
            <member value='&quot;5/8/2020&quot;' />
            <member value='&quot;5/9/2020&quot;' />
            <member value='&quot;5/10/2020&quot;' />
            <member value='&quot;5/11/2020&quot;' />
            <member value='&quot;5/12/2020&quot;' />
            <member value='&quot;6/1/2021&quot;' />
            <member value='&quot;6/2/2020&quot;' />
            <member value='&quot;6/3/2020&quot;' />
            <member value='&quot;6/4/2020&quot;' />
            <member value='&quot;6/5/2020&quot;' />
            <member value='&quot;6/6/2020&quot;' />
            <member value='&quot;6/7/2020&quot;' />
            <member value='&quot;6/8/2020&quot;' />
            <member value='&quot;6/9/2020&quot;' />
            <member value='&quot;6/10/2020&quot;' />
            <member value='&quot;6/11/2020&quot;' />
            <member value='&quot;6/12/2020&quot;' />
            <member value='&quot;7/1/2021&quot;' />
            <member value='&quot;7/2/2020&quot;' />
            <member value='&quot;7/3/2020&quot;' />
            <member value='&quot;7/4/2020&quot;' />
            <member value='&quot;7/5/2020&quot;' />
            <member value='&quot;7/6/2020&quot;' />
            <member value='&quot;7/7/2020&quot;' />
            <member value='&quot;7/8/2020&quot;' />
            <member value='&quot;7/9/2020&quot;' />
            <member value='&quot;7/10/2020&quot;' />
            <member value='&quot;7/11/2020&quot;' />
            <member value='&quot;7/12/2020&quot;' />
            <member value='&quot;8/1/2021&quot;' />
            <member value='&quot;8/2/2020&quot;' />
            <member value='&quot;8/3/2020&quot;' />
            <member value='&quot;8/4/2020&quot;' />
            <member value='&quot;8/5/2020&quot;' />
            <member value='&quot;8/6/2020&quot;' />
            <member value='&quot;8/7/2020&quot;' />
            <member value='&quot;8/8/2020&quot;' />
            <member value='&quot;8/9/2020&quot;' />
            <member value='&quot;8/10/2020&quot;' />
            <member value='&quot;8/11/2020&quot;' />
            <member value='&quot;8/12/2020&quot;' />
            <member value='&quot;9/1/2021&quot;' />
            <member value='&quot;9/2/2020&quot;' />
            <member value='&quot;9/3/2020&quot;' />
            <member value='&quot;9/4/2020&quot;' />
            <member value='&quot;9/5/2020&quot;' />
            <member value='&quot;9/6/2020&quot;' />
            <member value='&quot;9/7/2020&quot;' />
            <member value='&quot;9/8/2020&quot;' />
            <member value='&quot;9/9/2020&quot;' />
            <member value='&quot;9/10/2020&quot;' />
            <member value='&quot;9/11/2020&quot;' />
            <member value='&quot;9/12/2020&quot;' />
            <member value='&quot;01/13/2021&quot;' />
            <member value='&quot;01/14/2021&quot;' />
            <member value='&quot;01/15/2021&quot;' />
            <member value='&quot;01/16/2021&quot;' />
            <member value='&quot;01/17/2021&quot;' />
            <member value='&quot;01/18/2021&quot;' />
            <member value='&quot;01/19/2021&quot;' />
            <member value='&quot;01/22/2020&quot;' />
            <member value='&quot;01/23/2020&quot;' />
            <member value='&quot;01/24/2020&quot;' />
            <member value='&quot;01/25/2020&quot;' />
            <member value='&quot;01/26/2020&quot;' />
            <member value='&quot;01/27/2020&quot;' />
            <member value='&quot;01/28/2020&quot;' />
            <member value='&quot;01/29/2020&quot;' />
            <member value='&quot;01/30/2020&quot;' />
            <member value='&quot;01/31/2020&quot;' />
            <member value='&quot;02/13/2020&quot;' />
            <member value='&quot;02/14/2020&quot;' />
            <member value='&quot;02/15/2020&quot;' />
            <member value='&quot;02/16/2020&quot;' />
            <member value='&quot;02/17/2020&quot;' />
            <member value='&quot;02/18/2020&quot;' />
            <member value='&quot;02/19/2020&quot;' />
            <member value='&quot;02/20/2020&quot;' />
            <member value='&quot;02/21/2020&quot;' />
            <member value='&quot;02/22/2020&quot;' />
            <member value='&quot;02/23/2020&quot;' />
            <member value='&quot;02/24/2020&quot;' />
            <member value='&quot;02/25/2020&quot;' />
            <member value='&quot;02/26/2020&quot;' />
            <member value='&quot;02/27/2020&quot;' />
            <member value='&quot;02/28/2020&quot;' />
            <member value='&quot;02/29/2020&quot;' />
            <member value='&quot;03/13/2020&quot;' />
            <member value='&quot;03/14/2020&quot;' />
            <member value='&quot;03/15/2020&quot;' />
            <member value='&quot;03/16/2020&quot;' />
            <member value='&quot;03/17/2020&quot;' />
            <member value='&quot;03/18/2020&quot;' />
            <member value='&quot;03/19/2020&quot;' />
            <member value='&quot;03/20/2020&quot;' />
            <member value='&quot;03/21/2020&quot;' />
            <member value='&quot;03/22/2020&quot;' />
            <member value='&quot;03/23/2020&quot;' />
            <member value='&quot;03/24/2020&quot;' />
            <member value='&quot;03/25/2020&quot;' />
            <member value='&quot;03/26/2020&quot;' />
            <member value='&quot;03/27/2020&quot;' />
            <member value='&quot;03/28/2020&quot;' />
            <member value='&quot;03/29/2020&quot;' />
            <member value='&quot;03/30/2020&quot;' />
            <member value='&quot;03/31/2020&quot;' />
            <member value='&quot;04/13/2020&quot;' />
            <member value='&quot;04/14/2020&quot;' />
            <member value='&quot;04/15/2020&quot;' />
            <member value='&quot;04/16/2020&quot;' />
            <member value='&quot;04/17/2020&quot;' />
            <member value='&quot;04/18/2020&quot;' />
            <member value='&quot;04/19/2020&quot;' />
            <member value='&quot;04/20/2020&quot;' />
            <member value='&quot;04/21/2020&quot;' />
            <member value='&quot;04/22/2020&quot;' />
            <member value='&quot;04/23/2020&quot;' />
            <member value='&quot;04/24/2020&quot;' />
            <member value='&quot;04/25/2020&quot;' />
            <member value='&quot;04/26/2020&quot;' />
            <member value='&quot;04/27/2020&quot;' />
            <member value='&quot;04/28/2020&quot;' />
            <member value='&quot;04/29/2020&quot;' />
            <member value='&quot;04/30/2020&quot;' />
            <member value='&quot;05/13/2020&quot;' />
            <member value='&quot;05/14/2020&quot;' />
            <member value='&quot;05/15/2020&quot;' />
            <member value='&quot;05/16/2020&quot;' />
            <member value='&quot;05/17/2020&quot;' />
            <member value='&quot;05/18/2020&quot;' />
            <member value='&quot;05/19/2020&quot;' />
            <member value='&quot;05/20/2020&quot;' />
            <member value='&quot;05/21/2020&quot;' />
            <member value='&quot;05/22/2020&quot;' />
            <member value='&quot;05/23/2020&quot;' />
            <member value='&quot;05/24/2020&quot;' />
            <member value='&quot;05/25/2020&quot;' />
            <member value='&quot;05/26/2020&quot;' />
            <member value='&quot;05/27/2020&quot;' />
            <member value='&quot;05/28/2020&quot;' />
            <member value='&quot;05/29/2020&quot;' />
            <member value='&quot;05/30/2020&quot;' />
            <member value='&quot;05/31/2020&quot;' />
            <member value='&quot;06/13/2020&quot;' />
            <member value='&quot;06/14/2020&quot;' />
            <member value='&quot;06/15/2020&quot;' />
            <member value='&quot;06/16/2020&quot;' />
            <member value='&quot;06/17/2020&quot;' />
            <member value='&quot;06/18/2020&quot;' />
            <member value='&quot;06/19/2020&quot;' />
            <member value='&quot;06/20/2020&quot;' />
            <member value='&quot;06/21/2020&quot;' />
            <member value='&quot;06/22/2020&quot;' />
            <member value='&quot;06/23/2020&quot;' />
            <member value='&quot;06/24/2020&quot;' />
            <member value='&quot;06/25/2020&quot;' />
            <member value='&quot;06/26/2020&quot;' />
            <member value='&quot;06/27/2020&quot;' />
            <member value='&quot;06/28/2020&quot;' />
            <member value='&quot;06/29/2020&quot;' />
            <member value='&quot;06/30/2020&quot;' />
            <member value='&quot;07/13/2020&quot;' />
            <member value='&quot;07/14/2020&quot;' />
            <member value='&quot;07/15/2020&quot;' />
            <member value='&quot;07/16/2020&quot;' />
            <member value='&quot;07/17/2020&quot;' />
            <member value='&quot;07/18/2020&quot;' />
            <member value='&quot;07/19/2020&quot;' />
            <member value='&quot;07/20/2020&quot;' />
            <member value='&quot;07/21/2020&quot;' />
            <member value='&quot;07/22/2020&quot;' />
            <member value='&quot;07/23/2020&quot;' />
            <member value='&quot;07/24/2020&quot;' />
            <member value='&quot;07/25/2020&quot;' />
            <member value='&quot;07/26/2020&quot;' />
            <member value='&quot;07/27/2020&quot;' />
            <member value='&quot;07/28/2020&quot;' />
            <member value='&quot;07/29/2020&quot;' />
            <member value='&quot;07/30/2020&quot;' />
            <member value='&quot;07/31/2020&quot;' />
            <member value='&quot;08/13/2020&quot;' />
            <member value='&quot;08/14/2020&quot;' />
            <member value='&quot;08/15/2020&quot;' />
            <member value='&quot;08/16/2020&quot;' />
            <member value='&quot;08/17/2020&quot;' />
            <member value='&quot;08/18/2020&quot;' />
            <member value='&quot;08/19/2020&quot;' />
            <member value='&quot;08/20/2020&quot;' />
            <member value='&quot;08/21/2020&quot;' />
            <member value='&quot;08/22/2020&quot;' />
            <member value='&quot;08/23/2020&quot;' />
            <member value='&quot;08/24/2020&quot;' />
            <member value='&quot;08/25/2020&quot;' />
            <member value='&quot;08/26/2020&quot;' />
            <member value='&quot;08/27/2020&quot;' />
            <member value='&quot;08/28/2020&quot;' />
            <member value='&quot;08/29/2020&quot;' />
            <member value='&quot;08/30/2020&quot;' />
            <member value='&quot;08/31/2020&quot;' />
            <member value='&quot;09/13/2020&quot;' />
            <member value='&quot;09/14/2020&quot;' />
            <member value='&quot;09/15/2020&quot;' />
            <member value='&quot;09/16/2020&quot;' />
            <member value='&quot;09/17/2020&quot;' />
            <member value='&quot;09/18/2020&quot;' />
            <member value='&quot;09/19/2020&quot;' />
            <member value='&quot;09/20/2020&quot;' />
            <member value='&quot;09/21/2020&quot;' />
            <member value='&quot;09/22/2020&quot;' />
            <member value='&quot;09/23/2020&quot;' />
            <member value='&quot;09/24/2020&quot;' />
            <member value='&quot;09/25/2020&quot;' />
            <member value='&quot;09/26/2020&quot;' />
            <member value='&quot;09/27/2020&quot;' />
            <member value='&quot;09/28/2020&quot;' />
            <member value='&quot;09/29/2020&quot;' />
            <member value='&quot;09/30/2020&quot;' />
            <member value='&quot;10/1/2021&quot;' />
            <member value='&quot;10/2/2020&quot;' />
            <member value='&quot;10/3/2020&quot;' />
            <member value='&quot;10/4/2020&quot;' />
            <member value='&quot;10/5/2020&quot;' />
            <member value='&quot;10/6/2020&quot;' />
            <member value='&quot;10/7/2020&quot;' />
            <member value='&quot;10/8/2020&quot;' />
            <member value='&quot;10/9/2020&quot;' />
            <member value='&quot;10/10/2020&quot;' />
            <member value='&quot;10/11/2020&quot;' />
            <member value='&quot;10/12/2020&quot;' />
            <member value='&quot;10/13/2020&quot;' />
            <member value='&quot;10/14/2020&quot;' />
            <member value='&quot;10/15/2020&quot;' />
            <member value='&quot;10/16/2020&quot;' />
            <member value='&quot;10/17/2020&quot;' />
            <member value='&quot;10/18/2020&quot;' />
            <member value='&quot;10/19/2020&quot;' />
            <member value='&quot;10/20/2020&quot;' />
            <member value='&quot;10/21/2020&quot;' />
            <member value='&quot;10/22/2020&quot;' />
            <member value='&quot;10/23/2020&quot;' />
            <member value='&quot;10/24/2020&quot;' />
            <member value='&quot;10/25/2020&quot;' />
            <member value='&quot;10/26/2020&quot;' />
            <member value='&quot;10/27/2020&quot;' />
            <member value='&quot;10/28/2020&quot;' />
            <member value='&quot;10/29/2020&quot;' />
            <member value='&quot;10/30/2020&quot;' />
            <member value='&quot;10/31/2020&quot;' />
            <member value='&quot;11/1/2021&quot;' />
            <member value='&quot;11/2/2020&quot;' />
            <member value='&quot;11/3/2020&quot;' />
            <member value='&quot;11/4/2020&quot;' />
            <member value='&quot;11/5/2020&quot;' />
            <member value='&quot;11/6/2020&quot;' />
            <member value='&quot;11/7/2020&quot;' />
            <member value='&quot;11/8/2020&quot;' />
            <member value='&quot;11/9/2020&quot;' />
            <member value='&quot;11/10/2020&quot;' />
            <member value='&quot;11/11/2020&quot;' />
            <member value='&quot;11/12/2020&quot;' />
            <member value='&quot;11/13/2020&quot;' />
            <member value='&quot;11/14/2020&quot;' />
            <member value='&quot;11/15/2020&quot;' />
            <member value='&quot;11/16/2020&quot;' />
            <member value='&quot;11/17/2020&quot;' />
            <member value='&quot;11/18/2020&quot;' />
            <member value='&quot;11/19/2020&quot;' />
            <member value='&quot;11/20/2020&quot;' />
            <member value='&quot;11/21/2020&quot;' />
            <member value='&quot;11/22/2020&quot;' />
            <member value='&quot;11/23/2020&quot;' />
            <member value='&quot;11/24/2020&quot;' />
            <member value='&quot;11/25/2020&quot;' />
            <member value='&quot;11/26/2020&quot;' />
            <member value='&quot;11/27/2020&quot;' />
            <member value='&quot;11/28/2020&quot;' />
            <member value='&quot;11/29/2020&quot;' />
            <member value='&quot;11/30/2020&quot;' />
            <member value='&quot;12/1/2021&quot;' />
            <member value='&quot;12/2/2020&quot;' />
            <member value='&quot;12/3/2020&quot;' />
            <member value='&quot;12/4/2020&quot;' />
            <member value='&quot;12/5/2020&quot;' />
            <member value='&quot;12/6/2020&quot;' />
            <member value='&quot;12/7/2020&quot;' />
            <member value='&quot;12/8/2020&quot;' />
            <member value='&quot;12/9/2020&quot;' />
            <member value='&quot;12/10/2020&quot;' />
            <member value='&quot;12/11/2020&quot;' />
            <member value='&quot;12/12/2020&quot;' />
            <member value='&quot;12/13/2020&quot;' />
            <member value='&quot;12/14/2020&quot;' />
            <member value='&quot;12/15/2020&quot;' />
            <member value='&quot;12/16/2020&quot;' />
            <member value='&quot;12/17/2020&quot;' />
            <member value='&quot;12/18/2020&quot;' />
            <member value='&quot;12/19/2020&quot;' />
            <member value='&quot;12/20/2020&quot;' />
            <member value='&quot;12/21/2020&quot;' />
            <member value='&quot;12/22/2020&quot;' />
            <member value='&quot;12/23/2020&quot;' />
            <member value='&quot;12/24/2020&quot;' />
            <member value='&quot;12/25/2020&quot;' />
            <member value='&quot;12/26/2020&quot;' />
            <member value='&quot;12/27/2020&quot;' />
            <member value='&quot;12/28/2020&quot;' />
            <member value='&quot;12/29/2020&quot;' />
            <member value='&quot;12/30/2020&quot;' />
            <member value='&quot;12/31/2020&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type-v2='layout-basic' w='83800' x='800' y='1000'>
              <zone h='49000' id='3' name='Confirmed Cases By Country' w='41900' x='42700' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='13' name='Confirmed vs Deaths' w='41900' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='15' name='Confirmed vs Recovered' w='41900' x='42700' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='17' name='Recovered Cases By Country' w='41900' x='800' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='146' h='98000' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='14600' x='84600' y='1000'>
              <zone h='8125' id='8' name='Confirmed Cases By Country' pane-specification-id='0' param='[federated.1tusbzf02u76j41dptf3q0f3ju1i].[sum:Confirmed:qk]' type-v2='color' w='14600' x='84600' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8125' id='14' name='Confirmed vs Deaths' pane-specification-id='0' param='[federated.1tusbzf02u76j41dptf3q0f3ju1i].[sum:Deaths:qk]' type-v2='color' w='14600' x='84600' y='9125'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8125' id='16' name='Confirmed vs Recovered' pane-specification-id='0' param='[federated.1tusbzf02u76j41dptf3q0f3ju1i].[sum:Recovered:qk]' type-v2='color' w='14600' x='84600' y='17250'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='9375' id='18' mode='slider' param='[Parameters].[Observation Date Parameter]' type-v2='paramctrl' w='14600' x='84600' y='25375'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='9375' id='19' mode='slider' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='14600' x='84600' y='34750'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1500' minheight='1500' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='57' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='56' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='49000' id='13' is-fixed='true' name='Confirmed vs Deaths' w='41900' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8125' id='14' name='Confirmed vs Deaths' pane-specification-id='0' param='[federated.1tusbzf02u76j41dptf3q0f3ju1i].[sum:Deaths:qk]' type-v2='color' w='14600' x='84600' y='9125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='3' is-fixed='true' name='Confirmed Cases By Country' w='41900' x='42700' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8125' id='8' name='Confirmed Cases By Country' pane-specification-id='0' param='[federated.1tusbzf02u76j41dptf3q0f3ju1i].[sum:Confirmed:qk]' type-v2='color' w='14600' x='84600' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9375' id='18' mode='slider' param='[Parameters].[Observation Date Parameter]' type-v2='paramctrl' w='14600' x='84600' y='25375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9375' id='19' mode='slider' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='14600' x='84600' y='34750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='17' is-fixed='true' name='Recovered Cases By Country' w='41900' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='15' is-fixed='true' name='Confirmed vs Recovered' w='41900' x='42700' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8125' id='16' name='Confirmed vs Recovered' pane-specification-id='0' param='[federated.1tusbzf02u76j41dptf3q0f3ju1i].[sum:Recovered:qk]' type-v2='color' w='14600' x='84600' y='17250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{B14C826A-99C7-466E-8AC0-14385A0ECC53}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 2'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column alias='Top 15' caption='Top N' datatype='integer' name='[Parameter 2]' param-domain-type='list' role='measure' type='quantitative' value='15'>
          <calculation class='tableau' formula='15' />
          <aliases>
            <alias key='10' value='Top 10' />
            <alias key='15' value='Top 15' />
            <alias key='20' value='Top 20' />
          </aliases>
          <members>
            <member alias='Top 20' value='20' />
            <member alias='Top 15' value='15' />
            <member alias='Top 10' value='10' />
          </members>
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type-v2='layout-basic' w='82400' x='800' y='1000'>
              <zone h='49000' id='9' name='Death Rate by Country' w='41200' x='42000' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='10' name='Recovery rate by Country' w='41200' x='800' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='11' name='Top N cases' w='41200' x='42000' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='20' name='Confirmed Cases Trend Line' w='41200' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='6500' id='12' mode='compact' param='[Parameters].[Parameter 2]' type-v2='paramctrl' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1250' minheight='1250' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='42' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='41' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='49000' id='20' is-fixed='true' name='Confirmed Cases Trend Line' w='41200' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='9' is-fixed='true' name='Death Rate by Country' w='41200' x='42000' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6500' id='12' mode='compact' param='[Parameters].[Parameter 2]' type-v2='paramctrl' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='10' is-fixed='true' name='Recovery rate by Country' w='41200' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='11' is-fixed='true' name='Top N cases' w='41200' x='42000' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{952CF726-6F1C-44A8-AEB7-4768E185E6D1}' />
    </dashboard>
    <dashboard name='Story 1' type='storyboard'>
      <style />
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98340' id='1' param='vert' removable='false' type-v2='layout-flow' w='98426' x='787' y='830'>
            <zone h='3423' id='3' type-v2='title' w='98426' x='787' y='830' />
            <zone h='10477' id='4' is-fixed='true' paired-zone-id='5' removable='false' type-v2='flipboard-nav' w='98426' x='787' y='4253' />
            <zone h='84440' id='5' paired-zone-id='4' removable='false' type-v2='flipboard' w='98426' x='787' y='14730'>
              <flipboard active-id='1' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='US and India had the largest number of confirmed cases of covid' captured-sheet='Confirmed Cases By Country' id='1' />
                  <story-point caption='US confirmed the highest number of deaths ' captured-sheet='Confirmed vs Deaths' id='2' />
                  <story-point caption='India recorded highest number of recoveries' captured-sheet='Confirmed vs Recovered' id='3' />
                  <story-point caption='January 2021 recorded highest number of covid cases ' captured-sheet='Confirmed Cases Trend Line' id='4' />
                  <story-point caption='Russia had the highest recovery rate' captured-sheet='Recovery rate by Country' id='5' />
                  <story-point caption='Mexico had the highest death rate' captured-sheet='Death Rate by Country' id='6' />
                  <story-point caption='Statewise Maharashtra in India recorded the highest number of positive covid cases' captured-sheet='Top N cases' id='7' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{E41200F9-4BEF-463F-A672-B51929129CC9}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Confirmed Cases By Country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1tusbzf02u76j41dptf3q0f3ju1i].[sum:Confirmed:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1tusbzf02u76j41dptf3q0f3ju1i].[none:Calculation_273030745838575616:nk]</field>
            <field>[federated.1tusbzf02u76j41dptf3q0f3ju1i].[none:Province/State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{50412766-FF1A-49A3-B337-D5C91456D3B4}' />
    </window>
    <window class='worksheet' name='Confirmed Cases Trend Line'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Parameter 1]</field>
            <field>[federated.1tusbzf02u76j41dptf3q0f3ju1i].[none:Calculation_176203353480507393:nk]</field>
            <field>[federated.1tusbzf02u76j41dptf3q0f3ju1i].[none:Calculation_273030745838575616:nk]</field>
            <field>[federated.1tusbzf02u76j41dptf3q0f3ju1i].[none:Country/Region:nk]</field>
            <field>[federated.1tusbzf02u76j41dptf3q0f3ju1i].[none:ObservationDate:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DB3FEAEA-A334-49C3-B66D-5572BC06D307}' />
    </window>
    <window class='worksheet' name='Confirmed vs Deaths'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1tusbzf02u76j41dptf3q0f3ju1i].[sum:Deaths:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1tusbzf02u76j41dptf3q0f3ju1i].[none:Calculation_273030745838575616:nk]</field>
            <field>[federated.1tusbzf02u76j41dptf3q0f3ju1i].[none:Country/Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3BE5BAB1-65D0-4C19-8728-F3ACD809A9F3}' />
    </window>
    <window class='worksheet' name='Confirmed vs Recovered'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1tusbzf02u76j41dptf3q0f3ju1i].[sum:Recovered:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1tusbzf02u76j41dptf3q0f3ju1i].[none:Calculation_273030745838575616:nk]</field>
            <field>[federated.1tusbzf02u76j41dptf3q0f3ju1i].[none:Country/Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D1726391-5BD8-4A3A-8DC9-31C9B4410115}' />
    </window>
    <window class='worksheet' name='Death Rate by Country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1tusbzf02u76j41dptf3q0f3ju1i].[none:Calculation_273030745838575616:nk]</field>
            <field>[federated.1tusbzf02u76j41dptf3q0f3ju1i].[none:Country/Region:nk]</field>
            <field>[federated.1tusbzf02u76j41dptf3q0f3ju1i].[none:Last Update:nk]</field>
            <field>[federated.1tusbzf02u76j41dptf3q0f3ju1i].[none:Province/State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{23AB4BF3-65F3-4499-BAEF-EAD38B01CB92}' />
    </window>
    <window class='worksheet' name='Recovery rate by Country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1tusbzf02u76j41dptf3q0f3ju1i].[none:Calculation_273030745838575616:nk]</field>
            <field>[federated.1tusbzf02u76j41dptf3q0f3ju1i].[none:Country/Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8AAB2064-E77A-424A-94FE-5BE564353D30}' />
    </window>
    <window class='worksheet' name='Recovered Cases By Country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[Observation Date Parameter]' type='parameter' />
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Observation Date Parameter]</field>
            <field>[Parameters].[Parameter 1]</field>
            <field>[federated.1tusbzf02u76j41dptf3q0f3ju1i].[none:Calculation_273030745838575616:nk]</field>
            <field>[federated.1tusbzf02u76j41dptf3q0f3ju1i].[none:Country/Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0539CF7B-B071-441A-8D06-27D73916DEF3}' />
    </window>
    <window class='worksheet' name='datewise cofirmed cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='typeinlist' param='[federated.1tusbzf02u76j41dptf3q0f3ju1i].[none:ObservationDate:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1tusbzf02u76j41dptf3q0f3ju1i].[none:ObservationDate:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7F07B35F-1574-4D4F-B0C4-F3CA36CDDF65}' />
    </window>
    <window class='worksheet' name='last updated confirmed cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1tusbzf02u76j41dptf3q0f3ju1i].[none:Last Update:nk]</field>
            <field>[federated.1tusbzf02u76j41dptf3q0f3ju1i].[yr:Last Update:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5F734223-8340-49D2-B6BB-4FCC5C65842B}' />
    </window>
    <window class='worksheet' name='Top N cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1tusbzf02u76j41dptf3q0f3ju1i].[none:Province/State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FA51DC85-BA1E-412D-827F-A25F7A6A9E09}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Confirmed Cases By Country'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Confirmed vs Deaths' />
        <viewpoint name='Confirmed vs Recovered' />
        <viewpoint name='Recovered Cases By Country' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{64B52842-7500-4A43-A4A9-EFAFFDAA3F47}' />
    </window>
    <window class='dashboard' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='Confirmed Cases Trend Line' />
        <viewpoint name='Death Rate by Country' />
        <viewpoint name='Recovery rate by Country' />
        <viewpoint name='Top N cases' />
      </viewpoints>
      <active id='12' />
      <simple-id uuid='{01502B35-F177-43C1-9F01-FC4692A3E3EE}' />
    </window>
    <window class='dashboard' maximized='true' name='Story 1'>
      <viewpoints />
      <active id='4' />
      <simple-id uuid='{609CA2AF-0B37-4650-AAD8-A630875668F6}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Confirmed Cases By Country' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Confirmed Cases Trend Line' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAXkUlEQVR4nO3d6XMcd37f8XdfcwEY3CAuEiQIggAPrSTqoDYreSVbcVKuSmyn4qSSqpT9
      JJVU/gn9BXmWSlUeJE9cycaucjaOdte7tiSvpV2tSPEQCYIASOIGBsDcZ0/feTDAENBqsZCI
      Q1J/X4Wp6emZ6d+v5/f79DE96FaCIAgQIqTUk66AECdJAiBCTQIgQk0CIEJNAiD2ZZYyPJie
      oWTaVEs5qpZ7xCUG5DaWuX9/imypfsRlSQDEfrwKf/mDH2KZef7y//6MubsfMrdR/cqTu/3T
      d0mZLvfvT+/7ujv/8GOypscP/+efk7OefklZXfwVf/cg/ZXL/yL6oU5NfKv4+VWsvku8eO06
      t2/9N5y+Tm5/8CM+shWuDjlMrQf8/luv8/6P/opMTeWfvj7Be/cyvHSuDbPjEkbqLkMXzvPT
      H/+MlpGr2A9+wcTQBJuf3UOrLPHJ4wxK/BTdrFJ3Y2SVTv7Dv/onaJEo5ye+Q1vxPo+fLDD1
      83fZqBm8ctrh/bXHnA4u8P9+/HP8RB//6d//O1oiX305LmsA8RuprV04m0vUqnlsNYGhRXjl
      d96m06vSfe4KQ20eM7OzFEny5pvfI6H6TLz0Bt//3bdIz31CwW8j8/gR488/R6XicOXyRc6e
      HsD3fbY2snz/D/6YoJjC1hO88Xu/T1x5uskTeBYLqyUMcw2t+xxtSpnRC5e5+sr3iJTXiQ5M
      8vr159GUZ5tH7Z133nnn2SYhvrX0BEPtPh/88h7fe+ttelsM7t+9w/mXX6fDL5EquLz42hv0
      6VU2ig6j58/R3tlHd3s7ETtH/8QrnO6NsbZV48L4OJcmhskUbAa6O7h8dZKbH/6cS9ffYqCz
      le6ePqKGQX9fD3a1yM1b95i8/jaXRnpZX13j9PmLXLjyPKn7Nzj9/D+C3BKmkmD0zBCa+tVT
      oMiRYBFmJ74J5Pv+SVdBhNiJB8DzvJOuggixZw6AbRaZX1zHB6r5DT69NYXtB5Sza9y6O43t
      w+LcHFYA+HVmZhefudJCHJZn/ho0lytQK5v4wSlmHi1x/lwf96ee4Ftlzg23M/N4lWBzhlp8
      gCF/hc8W80xcPIvrugRBgOd5yG6IOCnPHID+oWHKpScEPsRa2+jsPYux8BFq1whd3b1sFFfQ
      us/h5JdZVz2GO2ONgvWnRRuG8azVEOIreeYAWHWTet3EchysSol06jFuYgg/n2ErahFoLSiB
      S1IpkmKAiJY7jHoLcSieOQCbKwvUXZvVVI6J8VHmVvJcvTyGVdjkSarEpckhzEobEWWAdmIE
      TvIw6i3EoTjx4wCO48gmkDgx8lsg8a0RBAFe4OH5jZu/M7xrXGPYxfEcLNeSAIjjFQRBowP6
      Do739OZ+7nHjeRvHc7A9G9utY7k2tmtheVbz3nK3h10L27PxfBd3+9Yc9nYN+40AqIpKRI9I
      AMIgIIAgwA8C/MDHD3yCwG8+DrbHNYYbS9FGp7P23u8ZZ2N7jWHHc7Bd62ln9Wyc7dc4/vb9
      9njLtQgCHxQFBQVFUVAABeVz4xQafwq6ahDVo0T0KFE9SlTbGY7QGmklmuhuPhfRok9fu3t4
      z3MRNEVvlCP7AF8/fuDjei6O3+hcu4cbj53mEnRn6bezNLTc+p5xOx21sZR1m+91PXd7qdu4
      b4xvPO8FHrqqo6sGuqZjbN/rqoGu6hia8WvPR/QIhhYhou3cG0T0KIZm7BoXIarHtt+/M83t
      W3Oav/5YVVQU5Rl/9vkbyBrgSwiCgIBg7/2uYT/wsdw6pmNSd03qjtkYdkzqO+Obz9WbHba5
      St++OZ6NHwQE+J8rw98eH2wfPAwwtEhjqahHiWqxp0vJ7SVeS6SFDq2TiN7ogBEtQmT7uYge
      IapFMLTG0nRnWoZmoCoaqqJudz4VVVGaj5+Oa9x2ltTfRKEJwM6q3W1uc7p7tz19B8e1qbsm
      plN/2nndvZ3Y2r7tdODd42zXRlXV7SWmgaEZT4e372N6lKgeI2bEielR2mLJ5mr986vrRmfd
      3TF3d+DIdkc98Z9zfaN94wJQs2vkahnq251wZ0nbGK43l7DmzrhdS1zHs3F9b+8O0q4dJoBY
      s3Nu3xsx4nqcqBEnpsfpjHcSM+LEtx83X2MkiDVX7zrantX508fSYb9evnEB+C8f/mfm0jNo
      qta4KTqaqqGrGlE9tqdjJiIJuhLdjXHGTsfe6bw7HbwxHDfiGFqkufO14/Or9qPaFhUn4xu3
      E1ww89TsWmPzQjMwtjcFDNWQzim+tG9cAIQ4TLJBKkJNAiBCTQIgQk0CIEJNAiBCTQIgQk0C
      IEJNAiBCTQIgQk0CIEJNAiBCTQIgQk0CIEJNAiBCTQIgQu0QAxBQ2FjkFx/fpGr7lNIr/Orm
      PWwf5h9Ob58e3WRq+snhFSnEMzq0AAS+z+zSJteeG+Hh/Wlml7JMnO3g4aMVKrl5Hq+UKCzP
      M726eVhFCvHMDu9/ghWFNsPn40/uMXhmDAeVZHsvWnYFvXMEu7BCSvUY7ogCyPUBxNfC4QUg
      CKjYAc9dneTRwga6ErCm1UBPguPSrhRYZwhDyzYKlusDiK+BQ/yf4IBSJsViqsD58YtgZlna
      rDB+YRSzWiai+JhECdw6nR0dzXfJ/wSLkyT/FC9CTb4GFaEmARChJgEQoSYBEKEmARChJgEQ
      oSYBEKEmARChJgEQoSYBEKEmARChJgEQoSYBEKEmARChJgEQoSYBEKEmARChJgEQoSYBEKEm
      ARChJgEQoSYBEKEmARChJgEQoSYBEKEmARChJgEQoXaoF8jYmH/ABx/8nNVshSdTn/Lee++T
      Klrc+NsfkbYCfHOT//OTXxxekUI8owOdHv3J4goDp3pIxOO/8TWB77O4WeDylcu0xz2m1Q7e
      +O44M4srtPYmWX+ySk3JE29rnAjX9/3G+4KgOSzEcTtQAO5OzfA372f403/9h7QkfnMIPMck
      vbHOglknluxFUTXAR410o7tZikqEzpgG0LwohgRAnKR9A/Dp3SmWVlP8w8e30FSVv/jh3/Bn
      /+aPvvC1iqIy2NPJ0maWzqFRjNIqH3z4hPHvXMfOr9Oh1VhRThHxHAA0rREE3/f3XCxDiOO0
      7/UBZh8v8l//xw8Ahf/4Z3/CxbFzh14BuT6AOEn77gRnsnnefP1VujqTR9L5hThp+64BUpsZ
      Bk71UK2Z+277PwtZA4iTJJdIEqG2797n57+hURQVVVWOvFJCHJd9A2CW1vnJu++xmi7R0xkj
      ceYV/ujN546rbkIcuX13ghPtQ/yLf/vPGew7yx/+s7fwSpXjqpcQx+IAP4VoZ6Srwn//Xz9j
      ZHL06GskxDE6QAAqPHy0xoULk6zNLBx9jYQ4RgcIQIRkMsrUjV8R6es++hoJcYwO8BuECK99
      /20GUkUGz/YefY2EOEYHWAMU+PFff4jjWFRr9aOvkRDH6AABiKNrNXK5HOWadfQ1EuIYHWAT
      yCXZO8rrr3+XSCxx9DUS4hgdYA0QYHgmH330EQ8XNo++RkIcowOsAQyMRIxX3/w9kjH5zY74
      dvkta4AAq27iVIq8+1d/wS8/mz+eWglxTPb9NahjVcnmS1g1l9b2BJFYC20tsUOtgPwaVJyk
      fTeBarlV/u69D9lKwcvXL9IzNMbk6MBx1U2II7dvANr7x/mDf6zz8Y0Fkskk8VjkuOolxLHY
      fx9AUejs6ye7NMvDhw9Z2ywcU7WEOB4H+BZIRU+0MTk5SXtvx9HXSIhjdIDjADrXrl0hXyhx
      ov87KcQROMAawOf2JzeIJuMU6eLcoPwiVHx7HGAN4OApCc6cGcCumUdfIyGO0b7HAXzbJJWr
      0mrYLC6s0Dp0kfMDh7sfIMcBxEnadw1Q2HjCo6UM7d2DPHflDHduTB9XvYQ4FvvuAyR7hlj/
      2//ND5buU81vMvnGHx9XvYQ4Fr/lxFgBQRBg1S00I4KuqSjKPucFCnxmbt2g+/JL+JuPmVst
      8txL11i5d5MzL16nLSjx0adLvP7a01OryCaQOEm/5VsgBUVRiO1zXYDdyplVcrkCUbNKruDz
      4tVzzC+tolBmaTFLHxtk69VDqLYQh+PQzkse+C6zj9fo7W7DrFSItLQQi7WCn0dvHcIxU2QU
      ONXa+DmF67oEQYDneZzw2RlFiB3iifldWuJxNtcXID5IS3mDO4V1kqfG8atbdKolVjiNrm41
      Ct51TQDZBBIn5dBPjuvZFr4eAcekVHPo7GjHdWxUJcBDI/A9YtFo8/WyDyBOkpwdWoSaXCZV
      hJoEQISaBECEmgRAhJoEQISaBECEmgRAhJoEQISaBECEmgRAhJoEQISaBECEmgRAhJoEQISa
      BECEmgRAhJoEQISaBECEmgRAhJoEQISaBECEmgRAhJoEQISaBECEmgRAhJoEQISaBECE2uGd
      HTrwmb1/k1SmTOfwRbTiEql8jbHvvMbKJ+9y7s0/YcBf5c9/Nsef/su3D61YIZ7F4Z0cNwgI
      CMimlijWfCqeypWzfUzPr6G7eWyll1alwmLR4ne/+3LzugCe56GqsiISJ+MQrw8AG0tPcGJd
      jJ6JcPfRBp7ngqKiaG1E3QJlJUFbxAVAVVWCoHEJJk3TDrMaQhzY4V0hJvBZWHiMrcSpjlyk
      Qynz0SfrXLl2nXp+gxZgg15i9SwAitK4/JKsAcRJkusDiFCTRa8INQmACDUJgAg1CYAINQmA
      CDUJgAg1CYAINQmACDUJgAg1CYAINQmACDUJgAg1CYAINQmACDUJgAg1CYAINQmACDUJgAg1
      CYAINQmACDUJgAg1CYAINQmACDUJgAg1CYAINQmACDUJgAi1IwqAz8L0bd5//+/ZLFncfP8n
      ZKyAwNzir3/68dEUKcRXcKinR98R2FUKQRvfu36e2eUVWjpbWJ9fxySHkWhkbufU6ACe5zXP
      Fr17POw9jfoORVGa09g9TlEUfN//tXG73/9lyzmKaR5X3b+O5Xieh6ZpX5t2OpIAEASouo6m
      6RD4qNEeNDdNQTHoijeK9H2/WQnXdVEUpfnB7J4RXdebF9LYsXM9gd3jVFVFVVVc193zIWia
      1rwYx+5xBy1HUZQ909wp54umuXvczjQ/X84X1f3LlvNFdT9IOUf1GX2ZcmzbJhqNfm3a6WhO
      jx54TH36MamiyYWr17HyayQpscwwurnFtReeb75UTo8uTpJcH0CEmnwLJEJNAiBCTQIgQk0C
      IEJNAiBC7WiOA3wJQRDgOM5JV0OE1IkHQFGUI/0adOegia4f3ay6rts8GHNUjuPr4qMu4zja
      4svOw4lvAh3HRbKPsmMex/TheD6nb0NbfNl5OPEAaJqKXa+SK5QJggDXrlMz7e1nPdLpDPVa
      Gcv18T2HQi5LsWISALZZpVAsUchlqZgWge9RyGWpO58/zK5SKxcpVU0CAuq1KpbTOJRuVUoU
      azWqlTLe9hF31zap1RubZcV0GtOuk8tmsRwPz6mTy+Vx/WDXPGiATzGfw7RcgsCnUq7gbx9j
      LGfS1FyHcrXWKNOskMlkqJo2BAHZdAazViGbL+D6AVatQqFU2fOzCk3T8F2bXC6P4zU+i0ql
      RuMVjWnYlkmtbgMBjlUjm92uZ+CSTueolArkt6dbKeWp1Kzf0hY709vVFtVGWzhWjUwmQyab
      x/X8RluUyl/QFk9/sqAoCgo++VwO2/UJfJdyudqch3wmjWVbVGt1AOq1Mrl8Ec8PIPBIp3PU
      ygVyxUb9dtp07zxouJbZfJ/rWFRr1nYZPul0BsusUrc9gsBHe+edd945WFc9GkEQcOeTX5JL
      p7Cj3eQ3n7C8UWWovxs7t8x6Tafw5DYZY4gkFZZW1lhdWqCt9zS1rSUKpkV6K8Payjp+Pc/i
      Zpb1jQJDA33sLGzsUppPpx6xlVojmUwyMzeH7Ufpak+QTq1Qr1ssPJ7B6BqhxfCYvfP3zGUi
      nB1MsrSyhl3OspXLs54uUkotkc5nydVUTnUnm/NRWJ1janGL1VSangR8evshPWeGiaoKi8vL
      BGaZB49XOHt6kIf3blKquRiJVhKGz1pqg9xWhuxmipqi8mRqmsxWCr3jFG2xndV5wKP7t9nI
      5khXPDAzzD5ZZ+D0ANQrrOVKFFPLrBbqDPS0c+vGx5h2QLK7By+/TrrukFrdYHNhniAR5dHs
      PKnVNbqHzxBRd7XFjV+S20rhxLvJb8yznNpui+x2W8zvtEWZtfUNHs3O0jN8jurWEsVmW6Tw
      zByLW1nWN4oM72qL5dl7LKfzpLIVIl6F6Zkl+keG0Fyb5dQW1XyGxY0MwwPt3PzFLWrlNGWl
      g7agTKZaZW15g8zyIl4ixtyDWTZWVuk8PUK0uSgP+OzTj8lmtqiqbVQzi8yvFRke7MUtpliv
      BOQX7rMVdBB30ie/BgCTePsIL1+/QmmzxNj4RVqjGhCwnLYYO93LxPgomgLxZAeqVcY3kiQi
      Cvl6wOjIWUaHe2jr7KVgwavXXqQt6jaXvgDlUo3RicuMjw1SMXUujZ/FUGksgSyVweERzg/3
      AlBJr2J0naYlquFWC2gtnZwenaC3o5Xuzja8eDcvvnAN3yrsmYt8weGFV67RHVOJdg8yNtwH
      CvhmBuJ9DI6M0dfZAkC9UqJQqmAYBrX8Bomes0xcnqS1rZVOw6Rl6AqvXhkhXajvKsHFUZO8
      cO159HqN/pEx+jpatucvS1v7KS5MTNAS0/G8Arm0RalcJQgCtoomQ/1DXJ4YId7Zi+JUGJ14
      nksjSTKlp2tLglqjLV67QnGjzNj4OK1RHQhYytS32+IcmqrQ0tHHxPhZ+odH6YirFJpt0U1b
      Vw9FW+HVa9dojTp72sJ023nhxReIBzbdw6MM9rQ1PpPyFtHkAKPjEyQTBmAQi3jkKzatiQi5
      QonuniGuXB4j0dFNzCszOPYCL13sYj2/+0uUOnpikJdevYqZLXHuwkU6EhEgIJWtMtzfy8TE
      GIauoirK1yEABla9RL1QRG2JN8cGbg1PS6DxdJvRsRwuPP8q3TGL/OYyaks/5cw6qQpcnjhL
      1LMp120cJ2D3lmZEVyhVa5iVCnos0hxvV3PoiU7UXS+enZlhZeEJs9OzrOcLdHV2kFp8TNDS
      x7nhPry6Sd2q4QfanrmIaB6lqoXpenu+WdjYLDJwKrlrjMfki29w/fnzzD1aYD1nMdCp8ujh
      DP2jk/R0dWKVC5TKNWKx3VNS8ZwalmniqMqe+cvk6vR0xpqPFSVK7+kzvHypi+kHS1jE0P0a
      jxY2mbw6SULTqNVqlMp14rHd8xHBqpcxCwXU1t1tUcXXWva0BUBqfoH+0XP45RRq6wCl9Bqp
      isrli0/bwnUC9mz2exVMy8Ly/T2db32zymBfy9MRbhnL6OfVq2dIbWQpW9AW9ZidW+T8pUu0
      xqKYlRL5gklrfPfnZGBbZaxyBeLRXeVa1D2duPF0flu6hk5+EwhUfDPD9EqFyxeGmb5zg/XN
      NMWqTfepfqJUuHHzAelsmlhUZ2bqPm6kA8V1GT47SHFzmcXFVVLZIuNjI9y7fYfeM+NEvTIm
      EfLpDF19vWzNz1Dyk4x0qdy49RlbmxmqdZ8zYyNUUvPcebjAZr7C9de+y/mRQdq7e7EqVfoH
      +lh58pCV1XWKts6ZboPPHixwYfIyxewmUR1yZYue3g4e3rlFx+AoanWDe3MLZDJ5fDXG0EA3
      i9N3WVhZp2ir6PUMU4/WOD96CtOO0demMTP3mLXVZWgdIuGkWMjDxNkB0ukM1ErYkSQdEZc7
      9x9zbnyCrfn7PFlJUa7X0NQ2TvXGuP3xTVJbW6iJUyS1Eg/mC4ycTqLHOkkEJe7PLpBaW+XU
      yATpxSnqsX7OtEOm6lMvZIm0tEMtzfRKjcsXBpm+c3O7LRx6+gcw/DI3Pp0mnUnT2dOL4ysM
      dLeztLjG4JlBCpvLLC6tkMqWGB87w71bd+gdGcdwy1hKhNxWhr6eBJ/dneL02CXKazPMLq5R
      rFRQtFYGeluYunmT1c0tHKObVi/L3HqFs8OtuEo7XVGTu9PzbKyv0DE4Tm1zlixdjPVFSZfq
      2MUsSrydqFvk3nyGyfFzPLp3k5XUFsWaTbKjh7aYyye/+oyt9CbxliT/H2b2E66nRXx4AAAA
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Confirmed vs Deaths' width='192'>
      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
      GVAAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Confirmed vs Recovered' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Death Rate by Country' width='192'>
      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
      P9AAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Recovered Cases By Country' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Recovery rate by Country' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Story 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top N cases' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='datewise cofirmed cases' width='192'>
      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
      DJUwtRwAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='last updated confirmed cases' width='192'>
      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
      lZbmn94NreIZrqeNAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
